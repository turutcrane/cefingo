// Code generated by "genCefingo.go" DO NOT EDIT.
#ifndef CEFINGO_GEN_H_
#define CEFINGO_GEN_H_

CEFINGO_REF_COUNTER_WRAPPER(cef_accessibility_handler_t, cefingo_accessibility_handler_wrapper_t);
extern cef_accessibility_handler_t *cefingo_construct_accessibility_handler(cefingo_accessibility_handler_wrapper_t* accessibility_handler);

CEFINGO_REF_COUNTER_WRAPPER(cef_app_t, cefingo_app_wrapper_t);
extern cef_app_t *cefingo_construct_app(cefingo_app_wrapper_t* app);

CEFINGO_REF_COUNTER_WRAPPER(cef_audio_handler_t, cefingo_audio_handler_wrapper_t);
extern cef_audio_handler_t *cefingo_construct_audio_handler(cefingo_audio_handler_wrapper_t* audio_handler);

extern void cefingo_auth_callback_cont(
	struct _cef_auth_callback_t* self,
	const cef_string_t* username,
	const cef_string_t* password
);

extern void cefingo_auth_callback_cancel(
	struct _cef_auth_callback_t* self
);

extern void cefingo_box_layout_set_flex_for_view(
	struct _cef_box_layout_t* self,
	struct _cef_view_t* view,
	int flex
);

extern void cefingo_box_layout_clear_flex_for_view(
	struct _cef_box_layout_t* self,
	struct _cef_view_t* view
);

extern int cefingo_browser_is_valid(
	struct _cef_browser_t* self
);

extern struct _cef_browser_host_t* cefingo_browser_get_host(
	struct _cef_browser_t* self
);

extern int cefingo_browser_can_go_back(
	struct _cef_browser_t* self
);

extern void cefingo_browser_go_back(
	struct _cef_browser_t* self
);

extern int cefingo_browser_can_go_forward(
	struct _cef_browser_t* self
);

extern void cefingo_browser_go_forward(
	struct _cef_browser_t* self
);

extern int cefingo_browser_is_loading(
	struct _cef_browser_t* self
);

extern void cefingo_browser_reload(
	struct _cef_browser_t* self
);

extern void cefingo_browser_reload_ignore_cache(
	struct _cef_browser_t* self
);

extern void cefingo_browser_stop_load(
	struct _cef_browser_t* self
);

extern int cefingo_browser_get_identifier(
	struct _cef_browser_t* self
);

extern int cefingo_browser_is_same(
	struct _cef_browser_t* self,
	struct _cef_browser_t* that
);

extern int cefingo_browser_is_popup(
	struct _cef_browser_t* self
);

extern int cefingo_browser_has_document(
	struct _cef_browser_t* self
);

extern struct _cef_frame_t* cefingo_browser_get_main_frame(
	struct _cef_browser_t* self
);

extern struct _cef_frame_t* cefingo_browser_get_focused_frame(
	struct _cef_browser_t* self
);

extern struct _cef_frame_t* cefingo_browser_get_frame_byident(
	struct _cef_browser_t* self,
	int64 identifier
);

extern struct _cef_frame_t* cefingo_browser_get_frame(
	struct _cef_browser_t* self,
	const cef_string_t* name
);

extern size_t cefingo_browser_get_frame_count(
	struct _cef_browser_t* self
);

extern void cefingo_browser_get_frame_names(
	struct _cef_browser_t* self,
	cef_string_list_t names
);

CEFINGO_REF_COUNTER_WRAPPER(cef_run_file_dialog_callback_t, cefingo_run_file_dialog_callback_wrapper_t);
extern cef_run_file_dialog_callback_t *cefingo_construct_run_file_dialog_callback(cefingo_run_file_dialog_callback_wrapper_t* run_file_dialog_callback);

CEFINGO_REF_COUNTER_WRAPPER(cef_navigation_entry_visitor_t, cefingo_navigation_entry_visitor_wrapper_t);
extern cef_navigation_entry_visitor_t *cefingo_construct_navigation_entry_visitor(cefingo_navigation_entry_visitor_wrapper_t* navigation_entry_visitor);

CEFINGO_REF_COUNTER_WRAPPER(cef_pdf_print_callback_t, cefingo_pdf_print_callback_wrapper_t);
extern cef_pdf_print_callback_t *cefingo_construct_pdf_print_callback(cefingo_pdf_print_callback_wrapper_t* pdf_print_callback);

extern void cefingo_download_image_callback_on_download_image_finished(
	struct _cef_download_image_callback_t* self,
	const cef_string_t* image_url,
	int http_status_code,
	struct _cef_image_t* image
);

extern struct _cef_browser_t* cefingo_browser_host_get_browser(
	struct _cef_browser_host_t* self
);

extern void cefingo_browser_host_close_browser(
	struct _cef_browser_host_t* self,
	int force_close
);

extern int cefingo_browser_host_try_close_browser(
	struct _cef_browser_host_t* self
);

extern void cefingo_browser_host_set_focus(
	struct _cef_browser_host_t* self,
	int focus
);

extern cef_window_handle_t cefingo_browser_host_get_window_handle(
	struct _cef_browser_host_t* self
);

extern cef_window_handle_t cefingo_browser_host_get_opener_window_handle(
	struct _cef_browser_host_t* self
);

extern int cefingo_browser_host_has_view(
	struct _cef_browser_host_t* self
);

extern struct _cef_client_t* cefingo_browser_host_get_client(
	struct _cef_browser_host_t* self
);

extern struct _cef_request_context_t* cefingo_browser_host_get_request_context(
	struct _cef_browser_host_t* self
);

extern double cefingo_browser_host_get_zoom_level(
	struct _cef_browser_host_t* self
);

extern void cefingo_browser_host_set_zoom_level(
	struct _cef_browser_host_t* self,
	double zoomLevel
);

extern void cefingo_browser_host_run_file_dialog(
	struct _cef_browser_host_t* self,
	cef_file_dialog_mode_t mode,
	const cef_string_t* title,
	const cef_string_t* default_file_path,
	cef_string_list_t accept_filters,
	struct _cef_run_file_dialog_callback_t* callback
);

extern void cefingo_browser_host_start_download(
	struct _cef_browser_host_t* self,
	const cef_string_t* url
);

extern void cefingo_browser_host_download_image(
	struct _cef_browser_host_t* self,
	const cef_string_t* image_url,
	int is_favicon,
	uint32 max_image_size,
	int bypass_cache,
	struct _cef_download_image_callback_t* callback
);

extern void cefingo_browser_host_print(
	struct _cef_browser_host_t* self
);

extern void cefingo_browser_host_print_to_pdf(
	struct _cef_browser_host_t* self,
	const cef_string_t* path,
	const struct _cef_pdf_print_settings_t* settings,
	struct _cef_pdf_print_callback_t* callback
);

extern void cefingo_browser_host_find(
	struct _cef_browser_host_t* self,
	const cef_string_t* searchText,
	int forward,
	int matchCase,
	int findNext
);

extern void cefingo_browser_host_stop_finding(
	struct _cef_browser_host_t* self,
	int clearSelection
);

extern void cefingo_browser_host_show_dev_tools(
	struct _cef_browser_host_t* self,
	const struct _cef_window_info_t* windowInfo,
	struct _cef_client_t* client,
	const struct _cef_browser_settings_t* settings,
	const cef_point_t* inspect_element_at
);

extern void cefingo_browser_host_close_dev_tools(
	struct _cef_browser_host_t* self
);

extern int cefingo_browser_host_has_dev_tools(
	struct _cef_browser_host_t* self
);

extern int cefingo_browser_host_send_dev_tools_message(
	struct _cef_browser_host_t* self,
	const void* message,
	size_t message_size
);

extern int cefingo_browser_host_execute_dev_tools_method(
	struct _cef_browser_host_t* self,
	int message_id,
	const cef_string_t* method,
	struct _cef_dictionary_value_t* params
);

extern struct _cef_registration_t* cefingo_browser_host_add_dev_tools_message_observer(
	struct _cef_browser_host_t* self,
	struct _cef_dev_tools_message_observer_t* observer
);

extern void cefingo_browser_host_get_navigation_entries(
	struct _cef_browser_host_t* self,
	struct _cef_navigation_entry_visitor_t* visitor,
	int current_only
);

extern void cefingo_browser_host_replace_misspelling(
	struct _cef_browser_host_t* self,
	const cef_string_t* word
);

extern void cefingo_browser_host_add_word_to_dictionary(
	struct _cef_browser_host_t* self,
	const cef_string_t* word
);

extern int cefingo_browser_host_is_window_rendering_disabled(
	struct _cef_browser_host_t* self
);

extern void cefingo_browser_host_was_resized(
	struct _cef_browser_host_t* self
);

extern void cefingo_browser_host_was_hidden(
	struct _cef_browser_host_t* self,
	int hidden
);

extern void cefingo_browser_host_notify_screen_info_changed(
	struct _cef_browser_host_t* self
);

extern void cefingo_browser_host_invalidate(
	struct _cef_browser_host_t* self,
	cef_paint_element_type_t type
);

extern void cefingo_browser_host_send_external_begin_frame(
	struct _cef_browser_host_t* self
);

extern void cefingo_browser_host_send_key_event(
	struct _cef_browser_host_t* self,
	const cef_key_event_t* event
);

extern void cefingo_browser_host_send_mouse_click_event(
	struct _cef_browser_host_t* self,
	const cef_mouse_event_t* event,
	cef_mouse_button_type_t type,
	int mouseUp,
	int clickCount
);

extern void cefingo_browser_host_send_mouse_move_event(
	struct _cef_browser_host_t* self,
	const cef_mouse_event_t* event,
	int mouseLeave
);

extern void cefingo_browser_host_send_mouse_wheel_event(
	struct _cef_browser_host_t* self,
	const cef_mouse_event_t* event,
	int deltaX,
	int deltaY
);

extern void cefingo_browser_host_send_touch_event(
	struct _cef_browser_host_t* self,
	const cef_touch_event_t* event
);

extern void cefingo_browser_host_send_capture_lost_event(
	struct _cef_browser_host_t* self
);

extern void cefingo_browser_host_notify_move_or_resize_started(
	struct _cef_browser_host_t* self
);

extern int cefingo_browser_host_get_windowless_frame_rate(
	struct _cef_browser_host_t* self
);

extern void cefingo_browser_host_set_windowless_frame_rate(
	struct _cef_browser_host_t* self,
	int frame_rate
);

extern void cefingo_browser_host_ime_set_composition(
	struct _cef_browser_host_t* self,
	const cef_string_t* text,
	size_t underlinesCount,
	const cef_composition_underline_t* underlines,
	const cef_range_t* replacement_range,
	const cef_range_t* selection_range
);

extern void cefingo_browser_host_ime_commit_text(
	struct _cef_browser_host_t* self,
	const cef_string_t* text,
	const cef_range_t* replacement_range,
	int relative_cursor_pos
);

extern void cefingo_browser_host_ime_finish_composing_text(
	struct _cef_browser_host_t* self,
	int keep_selection
);

extern void cefingo_browser_host_ime_cancel_composition(
	struct _cef_browser_host_t* self
);

extern void cefingo_browser_host_drag_target_drag_enter(
	struct _cef_browser_host_t* self,
	struct _cef_drag_data_t* drag_data,
	const cef_mouse_event_t* event,
	cef_drag_operations_mask_t allowed_ops
);

extern void cefingo_browser_host_drag_target_drag_over(
	struct _cef_browser_host_t* self,
	const cef_mouse_event_t* event,
	cef_drag_operations_mask_t allowed_ops
);

extern void cefingo_browser_host_drag_target_drag_leave(
	struct _cef_browser_host_t* self
);

extern void cefingo_browser_host_drag_target_drop(
	struct _cef_browser_host_t* self,
	const cef_mouse_event_t* event
);

extern void cefingo_browser_host_drag_source_ended_at(
	struct _cef_browser_host_t* self,
	int x,
	int y,
	cef_drag_operations_mask_t op
);

extern void cefingo_browser_host_drag_source_system_drag_ended(
	struct _cef_browser_host_t* self
);

extern struct _cef_navigation_entry_t* cefingo_browser_host_get_visible_navigation_entry(
	struct _cef_browser_host_t* self
);

extern void cefingo_browser_host_set_accessibility_state(
	struct _cef_browser_host_t* self,
	cef_state_t accessibility_state
);

extern void cefingo_browser_host_set_auto_resize_enabled(
	struct _cef_browser_host_t* self,
	int enabled,
	const cef_size_t* min_size,
	const cef_size_t* max_size
);

extern struct _cef_extension_t* cefingo_browser_host_get_extension(
	struct _cef_browser_host_t* self
);

extern int cefingo_browser_host_is_background_host(
	struct _cef_browser_host_t* self
);

extern void cefingo_browser_host_set_audio_muted(
	struct _cef_browser_host_t* self,
	int mute
);

extern int cefingo_browser_host_is_audio_muted(
	struct _cef_browser_host_t* self
);

CEFINGO_REF_COUNTER_WRAPPER(cef_browser_process_handler_t, cefingo_browser_process_handler_wrapper_t);
extern cef_browser_process_handler_t *cefingo_construct_browser_process_handler(cefingo_browser_process_handler_wrapper_t* browser_process_handler);

extern struct _cef_browser_t* cefingo_browser_view_get_browser(
	struct _cef_browser_view_t* self
);

extern struct _cef_view_t* cefingo_browser_view_get_chrome_toolbar(
	struct _cef_browser_view_t* self
);

extern void cefingo_browser_view_set_prefer_accelerators(
	struct _cef_browser_view_t* self,
	int prefer_accelerators
);

CEFINGO_REF_COUNTER_WRAPPER(cef_browser_view_delegate_t, cefingo_browser_view_delegate_wrapper_t);
extern cef_browser_view_delegate_t *cefingo_construct_browser_view_delegate(cefingo_browser_view_delegate_wrapper_t* browser_view_delegate);

extern struct _cef_label_button_t* cefingo_button_as_label_button(
	struct _cef_button_t* self
);

extern void cefingo_button_set_state(
	struct _cef_button_t* self,
	cef_button_state_t state
);

extern cef_button_state_t cefingo_button_get_state(
	struct _cef_button_t* self
);

extern void cefingo_button_set_ink_drop_enabled(
	struct _cef_button_t* self,
	int enabled
);

extern void cefingo_button_set_tooltip_text(
	struct _cef_button_t* self,
	const cef_string_t* tooltip_text
);

extern void cefingo_button_set_accessible_name(
	struct _cef_button_t* self,
	const cef_string_t* name
);

CEFINGO_REF_COUNTER_WRAPPER(cef_button_delegate_t, cefingo_button_delegate_wrapper_t);
extern cef_button_delegate_t *cefingo_construct_button_delegate(cefingo_button_delegate_wrapper_t* button_delegate);

extern void cefingo_callback_cont(
	struct _cef_callback_t* self
);

extern void cefingo_callback_cancel(
	struct _cef_callback_t* self
);

extern void cefingo_completion_callback_on_complete(
	struct _cef_completion_callback_t* self
);

CEFINGO_REF_COUNTER_WRAPPER(cef_client_t, cefingo_client_wrapper_t);
extern cef_client_t *cefingo_construct_client(cefingo_client_wrapper_t* client);

extern int cefingo_command_handler_on_chrome_command(
	struct _cef_command_handler_t* self,
	struct _cef_browser_t* browser,
	int command_id,
	cef_window_open_disposition_t disposition
);

extern int cefingo_command_line_is_valid(
	struct _cef_command_line_t* self
);

extern int cefingo_command_line_is_read_only(
	struct _cef_command_line_t* self
);

extern struct _cef_command_line_t* cefingo_command_line_copy(
	struct _cef_command_line_t* self
);

extern void cefingo_command_line_init_from_string(
	struct _cef_command_line_t* self,
	const cef_string_t* command_line
);

extern void cefingo_command_line_reset(
	struct _cef_command_line_t* self
);

extern void cefingo_command_line_get_argv(
	struct _cef_command_line_t* self,
	cef_string_list_t argv
);

extern cef_string_userfree_t cefingo_command_line_get_command_line_string(
	struct _cef_command_line_t* self
);

extern cef_string_userfree_t cefingo_command_line_get_program(
	struct _cef_command_line_t* self
);

extern void cefingo_command_line_set_program(
	struct _cef_command_line_t* self,
	const cef_string_t* program
);

extern int cefingo_command_line_has_switches(
	struct _cef_command_line_t* self
);

extern int cefingo_command_line_has_switch(
	struct _cef_command_line_t* self,
	const cef_string_t* name
);

extern cef_string_userfree_t cefingo_command_line_get_switch_value(
	struct _cef_command_line_t* self,
	const cef_string_t* name
);

extern void cefingo_command_line_get_switches(
	struct _cef_command_line_t* self,
	cef_string_map_t switches
);

extern void cefingo_command_line_append_switch(
	struct _cef_command_line_t* self,
	const cef_string_t* name
);

extern void cefingo_command_line_append_switch_with_value(
	struct _cef_command_line_t* self,
	const cef_string_t* name,
	const cef_string_t* value
);

extern int cefingo_command_line_has_arguments(
	struct _cef_command_line_t* self
);

extern void cefingo_command_line_get_arguments(
	struct _cef_command_line_t* self,
	cef_string_list_t arguments
);

extern void cefingo_command_line_append_argument(
	struct _cef_command_line_t* self,
	const cef_string_t* argument
);

extern void cefingo_command_line_prepend_wrapper(
	struct _cef_command_line_t* self,
	const cef_string_t* wrapper
);

extern void cefingo_run_context_menu_callback_cont(
	struct _cef_run_context_menu_callback_t* self,
	int command_id,
	cef_event_flags_t event_flags
);

extern void cefingo_run_context_menu_callback_cancel(
	struct _cef_run_context_menu_callback_t* self
);

extern void cefingo_run_quick_menu_callback_cont(
	struct _cef_run_quick_menu_callback_t* self,
	int command_id,
	cef_event_flags_t event_flags
);

extern void cefingo_run_quick_menu_callback_cancel(
	struct _cef_run_quick_menu_callback_t* self
);

CEFINGO_REF_COUNTER_WRAPPER(cef_context_menu_handler_t, cefingo_context_menu_handler_wrapper_t);
extern cef_context_menu_handler_t *cefingo_construct_context_menu_handler(cefingo_context_menu_handler_wrapper_t* context_menu_handler);

extern int cefingo_context_menu_params_get_xcoord(
	struct _cef_context_menu_params_t* self
);

extern int cefingo_context_menu_params_get_ycoord(
	struct _cef_context_menu_params_t* self
);

extern cef_context_menu_type_flags_t cefingo_context_menu_params_get_type_flags(
	struct _cef_context_menu_params_t* self
);

extern cef_string_userfree_t cefingo_context_menu_params_get_link_url(
	struct _cef_context_menu_params_t* self
);

extern cef_string_userfree_t cefingo_context_menu_params_get_unfiltered_link_url(
	struct _cef_context_menu_params_t* self
);

extern cef_string_userfree_t cefingo_context_menu_params_get_source_url(
	struct _cef_context_menu_params_t* self
);

extern int cefingo_context_menu_params_has_image_contents(
	struct _cef_context_menu_params_t* self
);

extern cef_string_userfree_t cefingo_context_menu_params_get_title_text(
	struct _cef_context_menu_params_t* self
);

extern cef_string_userfree_t cefingo_context_menu_params_get_page_url(
	struct _cef_context_menu_params_t* self
);

extern cef_string_userfree_t cefingo_context_menu_params_get_frame_url(
	struct _cef_context_menu_params_t* self
);

extern cef_string_userfree_t cefingo_context_menu_params_get_frame_charset(
	struct _cef_context_menu_params_t* self
);

extern cef_context_menu_media_type_t cefingo_context_menu_params_get_media_type(
	struct _cef_context_menu_params_t* self
);

extern cef_context_menu_media_state_flags_t cefingo_context_menu_params_get_media_state_flags(
	struct _cef_context_menu_params_t* self
);

extern cef_string_userfree_t cefingo_context_menu_params_get_selection_text(
	struct _cef_context_menu_params_t* self
);

extern cef_string_userfree_t cefingo_context_menu_params_get_misspelled_word(
	struct _cef_context_menu_params_t* self
);

extern int cefingo_context_menu_params_get_dictionary_suggestions(
	struct _cef_context_menu_params_t* self,
	cef_string_list_t suggestions
);

extern int cefingo_context_menu_params_is_editable(
	struct _cef_context_menu_params_t* self
);

extern int cefingo_context_menu_params_is_spell_check_enabled(
	struct _cef_context_menu_params_t* self
);

extern cef_context_menu_edit_state_flags_t cefingo_context_menu_params_get_edit_state_flags(
	struct _cef_context_menu_params_t* self
);

extern int cefingo_context_menu_params_is_custom_menu(
	struct _cef_context_menu_params_t* self
);

extern int cefingo_cookie_manager_visit_all_cookies(
	struct _cef_cookie_manager_t* self,
	struct _cef_cookie_visitor_t* visitor
);

extern int cefingo_cookie_manager_visit_url_cookies(
	struct _cef_cookie_manager_t* self,
	const cef_string_t* url,
	int includeHttpOnly,
	struct _cef_cookie_visitor_t* visitor
);

extern int cefingo_cookie_manager_set_cookie(
	struct _cef_cookie_manager_t* self,
	const cef_string_t* url,
	const struct _cef_cookie_t* cookie,
	struct _cef_set_cookie_callback_t* callback
);

extern int cefingo_cookie_manager_delete_cookies(
	struct _cef_cookie_manager_t* self,
	const cef_string_t* url,
	const cef_string_t* cookie_name,
	struct _cef_delete_cookies_callback_t* callback
);

extern int cefingo_cookie_manager_flush_store(
	struct _cef_cookie_manager_t* self,
	struct _cef_completion_callback_t* callback
);

CEFINGO_REF_COUNTER_WRAPPER(cef_cookie_visitor_t, cefingo_cookie_visitor_wrapper_t);
extern cef_cookie_visitor_t *cefingo_construct_cookie_visitor(cefingo_cookie_visitor_wrapper_t* cookie_visitor);

CEFINGO_REF_COUNTER_WRAPPER(cef_set_cookie_callback_t, cefingo_set_cookie_callback_wrapper_t);
extern cef_set_cookie_callback_t *cefingo_construct_set_cookie_callback(cefingo_set_cookie_callback_wrapper_t* set_cookie_callback);

CEFINGO_REF_COUNTER_WRAPPER(cef_delete_cookies_callback_t, cefingo_delete_cookies_callback_wrapper_t);
extern cef_delete_cookies_callback_t *cefingo_construct_delete_cookies_callback(cefingo_delete_cookies_callback_wrapper_t* delete_cookies_callback);

CEFINGO_REF_COUNTER_WRAPPER(cef_dev_tools_message_observer_t, cefingo_dev_tools_message_observer_wrapper_t);
extern cef_dev_tools_message_observer_t *cefingo_construct_dev_tools_message_observer(cefingo_dev_tools_message_observer_wrapper_t* dev_tools_message_observer);

extern void cefingo_file_dialog_callback_cont(
	struct _cef_file_dialog_callback_t* self,
	cef_string_list_t file_paths
);

extern void cefingo_file_dialog_callback_cancel(
	struct _cef_file_dialog_callback_t* self
);

CEFINGO_REF_COUNTER_WRAPPER(cef_dialog_handler_t, cefingo_dialog_handler_wrapper_t);
extern cef_dialog_handler_t *cefingo_construct_dialog_handler(cefingo_dialog_handler_wrapper_t* dialog_handler);

extern int64 cefingo_display_get_id(
	struct _cef_display_t* self
);

extern float cefingo_display_get_device_scale_factor(
	struct _cef_display_t* self
);

extern void cefingo_display_convert_point_to_pixels(
	struct _cef_display_t* self,
	cef_point_t* point
);

extern void cefingo_display_convert_point_from_pixels(
	struct _cef_display_t* self,
	cef_point_t* point
);

extern cef_rect_t cefingo_display_get_bounds(
	struct _cef_display_t* self
);

extern cef_rect_t cefingo_display_get_work_area(
	struct _cef_display_t* self
);

extern int cefingo_display_get_rotation(
	struct _cef_display_t* self
);

CEFINGO_REF_COUNTER_WRAPPER(cef_display_handler_t, cefingo_display_handler_wrapper_t);
extern cef_display_handler_t *cefingo_construct_display_handler(cefingo_display_handler_wrapper_t* display_handler);

CEFINGO_REF_COUNTER_WRAPPER(cef_domvisitor_t, cefingo_domvisitor_wrapper_t);
extern cef_domvisitor_t *cefingo_construct_domvisitor(cefingo_domvisitor_wrapper_t* domvisitor);

extern cef_dom_document_type_t cefingo_domdocument_get_type(
	struct _cef_domdocument_t* self
);

extern struct _cef_domnode_t* cefingo_domdocument_get_document(
	struct _cef_domdocument_t* self
);

extern struct _cef_domnode_t* cefingo_domdocument_get_body(
	struct _cef_domdocument_t* self
);

extern struct _cef_domnode_t* cefingo_domdocument_get_head(
	struct _cef_domdocument_t* self
);

extern cef_string_userfree_t cefingo_domdocument_get_title(
	struct _cef_domdocument_t* self
);

extern struct _cef_domnode_t* cefingo_domdocument_get_element_by_id(
	struct _cef_domdocument_t* self,
	const cef_string_t* id
);

extern struct _cef_domnode_t* cefingo_domdocument_get_focused_node(
	struct _cef_domdocument_t* self
);

extern int cefingo_domdocument_has_selection(
	struct _cef_domdocument_t* self
);

extern int cefingo_domdocument_get_selection_start_offset(
	struct _cef_domdocument_t* self
);

extern int cefingo_domdocument_get_selection_end_offset(
	struct _cef_domdocument_t* self
);

extern cef_string_userfree_t cefingo_domdocument_get_selection_as_markup(
	struct _cef_domdocument_t* self
);

extern cef_string_userfree_t cefingo_domdocument_get_selection_as_text(
	struct _cef_domdocument_t* self
);

extern cef_string_userfree_t cefingo_domdocument_get_base_url(
	struct _cef_domdocument_t* self
);

extern cef_string_userfree_t cefingo_domdocument_get_complete_url(
	struct _cef_domdocument_t* self,
	const cef_string_t* partialURL
);

extern cef_dom_node_type_t cefingo_domnode_get_type(
	struct _cef_domnode_t* self
);

extern int cefingo_domnode_is_text(
	struct _cef_domnode_t* self
);

extern int cefingo_domnode_is_element(
	struct _cef_domnode_t* self
);

extern int cefingo_domnode_is_editable(
	struct _cef_domnode_t* self
);

extern int cefingo_domnode_is_form_control_element(
	struct _cef_domnode_t* self
);

extern cef_string_userfree_t cefingo_domnode_get_form_control_element_type(
	struct _cef_domnode_t* self
);

extern int cefingo_domnode_is_same(
	struct _cef_domnode_t* self,
	struct _cef_domnode_t* that
);

extern cef_string_userfree_t cefingo_domnode_get_name(
	struct _cef_domnode_t* self
);

extern cef_string_userfree_t cefingo_domnode_get_value(
	struct _cef_domnode_t* self
);

extern int cefingo_domnode_set_value(
	struct _cef_domnode_t* self,
	const cef_string_t* value
);

extern cef_string_userfree_t cefingo_domnode_get_as_markup(
	struct _cef_domnode_t* self
);

extern struct _cef_domdocument_t* cefingo_domnode_get_document(
	struct _cef_domnode_t* self
);

extern struct _cef_domnode_t* cefingo_domnode_get_parent(
	struct _cef_domnode_t* self
);

extern struct _cef_domnode_t* cefingo_domnode_get_previous_sibling(
	struct _cef_domnode_t* self
);

extern struct _cef_domnode_t* cefingo_domnode_get_next_sibling(
	struct _cef_domnode_t* self
);

extern int cefingo_domnode_has_children(
	struct _cef_domnode_t* self
);

extern struct _cef_domnode_t* cefingo_domnode_get_first_child(
	struct _cef_domnode_t* self
);

extern struct _cef_domnode_t* cefingo_domnode_get_last_child(
	struct _cef_domnode_t* self
);

extern cef_string_userfree_t cefingo_domnode_get_element_tag_name(
	struct _cef_domnode_t* self
);

extern int cefingo_domnode_has_element_attributes(
	struct _cef_domnode_t* self
);

extern int cefingo_domnode_has_element_attribute(
	struct _cef_domnode_t* self,
	const cef_string_t* attrName
);

extern cef_string_userfree_t cefingo_domnode_get_element_attribute(
	struct _cef_domnode_t* self,
	const cef_string_t* attrName
);

extern void cefingo_domnode_get_element_attributes(
	struct _cef_domnode_t* self,
	cef_string_map_t attrMap
);

extern int cefingo_domnode_set_element_attribute(
	struct _cef_domnode_t* self,
	const cef_string_t* attrName,
	const cef_string_t* value
);

extern cef_string_userfree_t cefingo_domnode_get_element_inner_text(
	struct _cef_domnode_t* self
);

extern cef_rect_t cefingo_domnode_get_element_bounds(
	struct _cef_domnode_t* self
);

extern void cefingo_before_download_callback_cont(
	struct _cef_before_download_callback_t* self,
	const cef_string_t* download_path,
	int show_dialog
);

extern void cefingo_download_item_callback_cancel(
	struct _cef_download_item_callback_t* self
);

extern void cefingo_download_item_callback_pause(
	struct _cef_download_item_callback_t* self
);

extern void cefingo_download_item_callback_resume(
	struct _cef_download_item_callback_t* self
);

CEFINGO_REF_COUNTER_WRAPPER(cef_download_handler_t, cefingo_download_handler_wrapper_t);
extern cef_download_handler_t *cefingo_construct_download_handler(cefingo_download_handler_wrapper_t* download_handler);

extern int cefingo_download_item_is_valid(
	struct _cef_download_item_t* self
);

extern int cefingo_download_item_is_in_progress(
	struct _cef_download_item_t* self
);

extern int cefingo_download_item_is_complete(
	struct _cef_download_item_t* self
);

extern int cefingo_download_item_is_canceled(
	struct _cef_download_item_t* self
);

extern int64 cefingo_download_item_get_current_speed(
	struct _cef_download_item_t* self
);

extern int cefingo_download_item_get_percent_complete(
	struct _cef_download_item_t* self
);

extern int64 cefingo_download_item_get_total_bytes(
	struct _cef_download_item_t* self
);

extern int64 cefingo_download_item_get_received_bytes(
	struct _cef_download_item_t* self
);

extern cef_basetime_t cefingo_download_item_get_start_time(
	struct _cef_download_item_t* self
);

extern cef_basetime_t cefingo_download_item_get_end_time(
	struct _cef_download_item_t* self
);

extern cef_string_userfree_t cefingo_download_item_get_full_path(
	struct _cef_download_item_t* self
);

extern uint32 cefingo_download_item_get_id(
	struct _cef_download_item_t* self
);

extern cef_string_userfree_t cefingo_download_item_get_url(
	struct _cef_download_item_t* self
);

extern cef_string_userfree_t cefingo_download_item_get_original_url(
	struct _cef_download_item_t* self
);

extern cef_string_userfree_t cefingo_download_item_get_suggested_file_name(
	struct _cef_download_item_t* self
);

extern cef_string_userfree_t cefingo_download_item_get_content_disposition(
	struct _cef_download_item_t* self
);

extern cef_string_userfree_t cefingo_download_item_get_mime_type(
	struct _cef_download_item_t* self
);

extern struct _cef_drag_data_t* cefingo_drag_data_clone(
	struct _cef_drag_data_t* self
);

extern int cefingo_drag_data_is_read_only(
	struct _cef_drag_data_t* self
);

extern int cefingo_drag_data_is_link(
	struct _cef_drag_data_t* self
);

extern int cefingo_drag_data_is_fragment(
	struct _cef_drag_data_t* self
);

extern int cefingo_drag_data_is_file(
	struct _cef_drag_data_t* self
);

extern cef_string_userfree_t cefingo_drag_data_get_link_url(
	struct _cef_drag_data_t* self
);

extern cef_string_userfree_t cefingo_drag_data_get_link_title(
	struct _cef_drag_data_t* self
);

extern cef_string_userfree_t cefingo_drag_data_get_link_metadata(
	struct _cef_drag_data_t* self
);

extern cef_string_userfree_t cefingo_drag_data_get_fragment_text(
	struct _cef_drag_data_t* self
);

extern cef_string_userfree_t cefingo_drag_data_get_fragment_html(
	struct _cef_drag_data_t* self
);

extern cef_string_userfree_t cefingo_drag_data_get_fragment_base_url(
	struct _cef_drag_data_t* self
);

extern cef_string_userfree_t cefingo_drag_data_get_file_name(
	struct _cef_drag_data_t* self
);

extern size_t cefingo_drag_data_get_file_contents(
	struct _cef_drag_data_t* self,
	struct _cef_stream_writer_t* writer
);

extern int cefingo_drag_data_get_file_names(
	struct _cef_drag_data_t* self,
	cef_string_list_t names
);

extern void cefingo_drag_data_set_link_url(
	struct _cef_drag_data_t* self,
	const cef_string_t* url
);

extern void cefingo_drag_data_set_link_title(
	struct _cef_drag_data_t* self,
	const cef_string_t* title
);

extern void cefingo_drag_data_set_link_metadata(
	struct _cef_drag_data_t* self,
	const cef_string_t* data
);

extern void cefingo_drag_data_set_fragment_text(
	struct _cef_drag_data_t* self,
	const cef_string_t* text
);

extern void cefingo_drag_data_set_fragment_html(
	struct _cef_drag_data_t* self,
	const cef_string_t* html
);

extern void cefingo_drag_data_set_fragment_base_url(
	struct _cef_drag_data_t* self,
	const cef_string_t* base_url
);

extern void cefingo_drag_data_reset_file_contents(
	struct _cef_drag_data_t* self
);

extern void cefingo_drag_data_add_file(
	struct _cef_drag_data_t* self,
	const cef_string_t* path,
	const cef_string_t* display_name
);

extern void cefingo_drag_data_clear_filenames(
	struct _cef_drag_data_t* self
);

extern struct _cef_image_t* cefingo_drag_data_get_image(
	struct _cef_drag_data_t* self
);

extern cef_point_t cefingo_drag_data_get_image_hotspot(
	struct _cef_drag_data_t* self
);

extern int cefingo_drag_data_has_image(
	struct _cef_drag_data_t* self
);

CEFINGO_REF_COUNTER_WRAPPER(cef_drag_handler_t, cefingo_drag_handler_wrapper_t);
extern cef_drag_handler_t *cefingo_construct_drag_handler(cefingo_drag_handler_wrapper_t* drag_handler);

extern cef_string_userfree_t cefingo_extension_get_identifier(
	struct _cef_extension_t* self
);

extern cef_string_userfree_t cefingo_extension_get_path(
	struct _cef_extension_t* self
);

extern struct _cef_dictionary_value_t* cefingo_extension_get_manifest(
	struct _cef_extension_t* self
);

extern int cefingo_extension_is_same(
	struct _cef_extension_t* self,
	struct _cef_extension_t* that
);

extern struct _cef_extension_handler_t* cefingo_extension_get_handler(
	struct _cef_extension_t* self
);

extern struct _cef_request_context_t* cefingo_extension_get_loader_context(
	struct _cef_extension_t* self
);

extern int cefingo_extension_is_loaded(
	struct _cef_extension_t* self
);

extern void cefingo_extension_unload(
	struct _cef_extension_t* self
);

extern void cefingo_get_extension_resource_callback_cont(
	struct _cef_get_extension_resource_callback_t* self,
	struct _cef_stream_reader_t* stream
);

extern void cefingo_get_extension_resource_callback_cancel(
	struct _cef_get_extension_resource_callback_t* self
);

CEFINGO_REF_COUNTER_WRAPPER(cef_extension_handler_t, cefingo_extension_handler_wrapper_t);
extern cef_extension_handler_t *cefingo_construct_extension_handler(cefingo_extension_handler_wrapper_t* extension_handler);

CEFINGO_REF_COUNTER_WRAPPER(cef_find_handler_t, cefingo_find_handler_wrapper_t);
extern cef_find_handler_t *cefingo_construct_find_handler(cefingo_find_handler_wrapper_t* find_handler);

CEFINGO_REF_COUNTER_WRAPPER(cef_focus_handler_t, cefingo_focus_handler_wrapper_t);
extern cef_focus_handler_t *cefingo_construct_focus_handler(cefingo_focus_handler_wrapper_t* focus_handler);

extern int cefingo_frame_is_valid(
	struct _cef_frame_t* self
);

extern void cefingo_frame_undo(
	struct _cef_frame_t* self
);

extern void cefingo_frame_redo(
	struct _cef_frame_t* self
);

extern void cefingo_frame_cut(
	struct _cef_frame_t* self
);

extern void cefingo_frame_copy(
	struct _cef_frame_t* self
);

extern void cefingo_frame_paste(
	struct _cef_frame_t* self
);

extern void cefingo_frame_del(
	struct _cef_frame_t* self
);

extern void cefingo_frame_select_all(
	struct _cef_frame_t* self
);

extern void cefingo_frame_view_source(
	struct _cef_frame_t* self
);

extern void cefingo_frame_get_source(
	struct _cef_frame_t* self,
	struct _cef_string_visitor_t* visitor
);

extern void cefingo_frame_get_text(
	struct _cef_frame_t* self,
	struct _cef_string_visitor_t* visitor
);

extern void cefingo_frame_load_request(
	struct _cef_frame_t* self,
	struct _cef_request_t* request
);

extern void cefingo_frame_load_url(
	struct _cef_frame_t* self,
	const cef_string_t* url
);

extern void cefingo_frame_execute_java_script(
	struct _cef_frame_t* self,
	const cef_string_t* code,
	const cef_string_t* script_url,
	int start_line
);

extern int cefingo_frame_is_main(
	struct _cef_frame_t* self
);

extern int cefingo_frame_is_focused(
	struct _cef_frame_t* self
);

extern cef_string_userfree_t cefingo_frame_get_name(
	struct _cef_frame_t* self
);

extern int64 cefingo_frame_get_identifier(
	struct _cef_frame_t* self
);

extern struct _cef_frame_t* cefingo_frame_get_parent(
	struct _cef_frame_t* self
);

extern cef_string_userfree_t cefingo_frame_get_url(
	struct _cef_frame_t* self
);

extern struct _cef_browser_t* cefingo_frame_get_browser(
	struct _cef_frame_t* self
);

extern struct _cef_v8context_t* cefingo_frame_get_v8context(
	struct _cef_frame_t* self
);

extern void cefingo_frame_visit_dom(
	struct _cef_frame_t* self,
	struct _cef_domvisitor_t* visitor
);

extern struct _cef_urlrequest_t* cefingo_frame_create_urlrequest(
	struct _cef_frame_t* self,
	struct _cef_request_t* request,
	struct _cef_urlrequest_client_t* client
);

extern void cefingo_frame_send_process_message(
	struct _cef_frame_t* self,
	cef_process_id_t target_process,
	struct _cef_process_message_t* message
);

extern void cefingo_frame_handler_on_frame_created(
	struct _cef_frame_handler_t* self,
	struct _cef_browser_t* browser,
	struct _cef_frame_t* frame
);

extern void cefingo_frame_handler_on_frame_attached(
	struct _cef_frame_handler_t* self,
	struct _cef_browser_t* browser,
	struct _cef_frame_t* frame,
	int reattached
);

extern void cefingo_frame_handler_on_frame_detached(
	struct _cef_frame_handler_t* self,
	struct _cef_browser_t* browser,
	struct _cef_frame_t* frame
);

extern void cefingo_frame_handler_on_main_frame_changed(
	struct _cef_frame_handler_t* self,
	struct _cef_browser_t* browser,
	struct _cef_frame_t* old_frame,
	struct _cef_frame_t* new_frame
);

extern int cefingo_image_is_empty(
	struct _cef_image_t* self
);

extern int cefingo_image_is_same(
	struct _cef_image_t* self,
	struct _cef_image_t* that
);

extern int cefingo_image_add_bitmap(
	struct _cef_image_t* self,
	float scale_factor,
	int pixel_width,
	int pixel_height,
	cef_color_type_t color_type,
	cef_alpha_type_t alpha_type,
	const void* pixel_data,
	size_t pixel_data_size
);

extern int cefingo_image_add_png(
	struct _cef_image_t* self,
	float scale_factor,
	const void* png_data,
	size_t png_data_size
);

extern int cefingo_image_add_jpeg(
	struct _cef_image_t* self,
	float scale_factor,
	const void* jpeg_data,
	size_t jpeg_data_size
);

extern size_t cefingo_image_get_width(
	struct _cef_image_t* self
);

extern size_t cefingo_image_get_height(
	struct _cef_image_t* self
);

extern int cefingo_image_has_representation(
	struct _cef_image_t* self,
	float scale_factor
);

extern int cefingo_image_remove_representation(
	struct _cef_image_t* self,
	float scale_factor
);

extern int cefingo_image_get_representation_info(
	struct _cef_image_t* self,
	float scale_factor,
	float* actual_scale_factor,
	int* pixel_width,
	int* pixel_height
);

extern struct _cef_binary_value_t* cefingo_image_get_as_bitmap(
	struct _cef_image_t* self,
	float scale_factor,
	cef_color_type_t color_type,
	cef_alpha_type_t alpha_type,
	int* pixel_width,
	int* pixel_height
);

extern struct _cef_binary_value_t* cefingo_image_get_as_png(
	struct _cef_image_t* self,
	float scale_factor,
	int with_transparency,
	int* pixel_width,
	int* pixel_height
);

extern struct _cef_binary_value_t* cefingo_image_get_as_jpeg(
	struct _cef_image_t* self,
	float scale_factor,
	int quality,
	int* pixel_width,
	int* pixel_height
);

extern void cefingo_jsdialog_callback_cont(
	struct _cef_jsdialog_callback_t* self,
	int success,
	const cef_string_t* user_input
);

CEFINGO_REF_COUNTER_WRAPPER(cef_jsdialog_handler_t, cefingo_jsdialog_handler_wrapper_t);
extern cef_jsdialog_handler_t *cefingo_construct_jsdialog_handler(cefingo_jsdialog_handler_wrapper_t* jsdialog_handler);

CEFINGO_REF_COUNTER_WRAPPER(cef_keyboard_handler_t, cefingo_keyboard_handler_wrapper_t);
extern cef_keyboard_handler_t *cefingo_construct_keyboard_handler(cefingo_keyboard_handler_wrapper_t* keyboard_handler);

extern struct _cef_menu_button_t* cefingo_label_button_as_menu_button(
	struct _cef_label_button_t* self
);

extern void cefingo_label_button_set_text(
	struct _cef_label_button_t* self,
	const cef_string_t* text
);

extern cef_string_userfree_t cefingo_label_button_get_text(
	struct _cef_label_button_t* self
);

extern void cefingo_label_button_set_image(
	struct _cef_label_button_t* self,
	cef_button_state_t button_state,
	struct _cef_image_t* image
);

extern struct _cef_image_t* cefingo_label_button_get_image(
	struct _cef_label_button_t* self,
	cef_button_state_t button_state
);

extern void cefingo_label_button_set_text_color(
	struct _cef_label_button_t* self,
	cef_button_state_t for_state,
	cef_color_t color
);

extern void cefingo_label_button_set_enabled_text_colors(
	struct _cef_label_button_t* self,
	cef_color_t color
);

extern void cefingo_label_button_set_font_list(
	struct _cef_label_button_t* self,
	const cef_string_t* font_list
);

extern void cefingo_label_button_set_horizontal_alignment(
	struct _cef_label_button_t* self,
	cef_horizontal_alignment_t alignment
);

extern void cefingo_label_button_set_minimum_size(
	struct _cef_label_button_t* self,
	const cef_size_t* size
);

extern void cefingo_label_button_set_maximum_size(
	struct _cef_label_button_t* self,
	const cef_size_t* size
);

extern struct _cef_box_layout_t* cefingo_layout_as_box_layout(
	struct _cef_layout_t* self
);

extern struct _cef_fill_layout_t* cefingo_layout_as_fill_layout(
	struct _cef_layout_t* self
);

extern int cefingo_layout_is_valid(
	struct _cef_layout_t* self
);

CEFINGO_REF_COUNTER_WRAPPER(cef_life_span_handler_t, cefingo_life_span_handler_wrapper_t);
extern cef_life_span_handler_t *cefingo_construct_life_span_handler(cefingo_life_span_handler_wrapper_t* life_span_handler);

CEFINGO_REF_COUNTER_WRAPPER(cef_load_handler_t, cefingo_load_handler_wrapper_t);
extern cef_load_handler_t *cefingo_construct_load_handler(cefingo_load_handler_wrapper_t* load_handler);

extern struct _cef_registration_t* cefingo_media_router_add_observer(
	struct _cef_media_router_t* self,
	struct _cef_media_observer_t* observer
);

extern struct _cef_media_source_t* cefingo_media_router_get_source(
	struct _cef_media_router_t* self,
	const cef_string_t* urn
);

extern void cefingo_media_router_notify_current_sinks(
	struct _cef_media_router_t* self
);

extern void cefingo_media_router_create_route(
	struct _cef_media_router_t* self,
	struct _cef_media_source_t* source,
	struct _cef_media_sink_t* sink,
	struct _cef_media_route_create_callback_t* callback
);

extern void cefingo_media_router_notify_current_routes(
	struct _cef_media_router_t* self
);

CEFINGO_REF_COUNTER_WRAPPER(cef_media_observer_t, cefingo_media_observer_wrapper_t);
extern cef_media_observer_t *cefingo_construct_media_observer(cefingo_media_observer_wrapper_t* media_observer);

extern cef_string_userfree_t cefingo_media_route_get_id(
	struct _cef_media_route_t* self
);

extern struct _cef_media_source_t* cefingo_media_route_get_source(
	struct _cef_media_route_t* self
);

extern struct _cef_media_sink_t* cefingo_media_route_get_sink(
	struct _cef_media_route_t* self
);

extern void cefingo_media_route_send_route_message(
	struct _cef_media_route_t* self,
	const void* message,
	size_t message_size
);

extern void cefingo_media_route_terminate(
	struct _cef_media_route_t* self
);

extern void cefingo_media_route_create_callback_on_media_route_create_finished(
	struct _cef_media_route_create_callback_t* self,
	cef_media_route_create_result_t result,
	const cef_string_t* error,
	struct _cef_media_route_t* route
);

extern cef_string_userfree_t cefingo_media_sink_get_id(
	struct _cef_media_sink_t* self
);

extern cef_string_userfree_t cefingo_media_sink_get_name(
	struct _cef_media_sink_t* self
);

extern cef_string_userfree_t cefingo_media_sink_get_description(
	struct _cef_media_sink_t* self
);

extern cef_media_sink_icon_type_t cefingo_media_sink_get_icon_type(
	struct _cef_media_sink_t* self
);

extern void cefingo_media_sink_get_device_info(
	struct _cef_media_sink_t* self,
	struct _cef_media_sink_device_info_callback_t* callback
);

extern int cefingo_media_sink_is_cast_sink(
	struct _cef_media_sink_t* self
);

extern int cefingo_media_sink_is_dial_sink(
	struct _cef_media_sink_t* self
);

extern int cefingo_media_sink_is_compatible_with(
	struct _cef_media_sink_t* self,
	struct _cef_media_source_t* source
);

extern void cefingo_media_sink_device_info_callback_on_media_sink_device_info(
	struct _cef_media_sink_device_info_callback_t* self,
	const struct _cef_media_sink_device_info_t* device_info
);

extern cef_string_userfree_t cefingo_media_source_get_id(
	struct _cef_media_source_t* self
);

extern int cefingo_media_source_is_cast_source(
	struct _cef_media_source_t* self
);

extern int cefingo_media_source_is_dial_source(
	struct _cef_media_source_t* self
);

extern void cefingo_menu_button_show_menu(
	struct _cef_menu_button_t* self,
	struct _cef_menu_model_t* menu_model,
	const cef_point_t* screen_point,
	cef_menu_anchor_position_t anchor_position
);

extern void cefingo_menu_button_trigger_menu(
	struct _cef_menu_button_t* self
);

CEFINGO_REF_COUNTER_WRAPPER(cef_menu_button_delegate_t, cefingo_menu_button_delegate_wrapper_t);
extern cef_menu_button_delegate_t *cefingo_construct_menu_button_delegate(cefingo_menu_button_delegate_wrapper_t* menu_button_delegate);

extern int cefingo_menu_model_is_sub_menu(
	struct _cef_menu_model_t* self
);

extern int cefingo_menu_model_clear(
	struct _cef_menu_model_t* self
);

extern size_t cefingo_menu_model_get_count(
	struct _cef_menu_model_t* self
);

extern int cefingo_menu_model_add_separator(
	struct _cef_menu_model_t* self
);

extern int cefingo_menu_model_add_item(
	struct _cef_menu_model_t* self,
	int command_id,
	const cef_string_t* label
);

extern int cefingo_menu_model_add_check_item(
	struct _cef_menu_model_t* self,
	int command_id,
	const cef_string_t* label
);

extern int cefingo_menu_model_add_radio_item(
	struct _cef_menu_model_t* self,
	int command_id,
	const cef_string_t* label,
	int group_id
);

extern struct _cef_menu_model_t* cefingo_menu_model_add_sub_menu(
	struct _cef_menu_model_t* self,
	int command_id,
	const cef_string_t* label
);

extern int cefingo_menu_model_insert_separator_at(
	struct _cef_menu_model_t* self,
	size_t index
);

extern int cefingo_menu_model_insert_item_at(
	struct _cef_menu_model_t* self,
	size_t index,
	int command_id,
	const cef_string_t* label
);

extern int cefingo_menu_model_insert_check_item_at(
	struct _cef_menu_model_t* self,
	size_t index,
	int command_id,
	const cef_string_t* label
);

extern int cefingo_menu_model_insert_radio_item_at(
	struct _cef_menu_model_t* self,
	size_t index,
	int command_id,
	const cef_string_t* label,
	int group_id
);

extern struct _cef_menu_model_t* cefingo_menu_model_insert_sub_menu_at(
	struct _cef_menu_model_t* self,
	size_t index,
	int command_id,
	const cef_string_t* label
);

extern int cefingo_menu_model_remove(
	struct _cef_menu_model_t* self,
	int command_id
);

extern int cefingo_menu_model_remove_at(
	struct _cef_menu_model_t* self,
	size_t index
);

extern int cefingo_menu_model_get_index_of(
	struct _cef_menu_model_t* self,
	int command_id
);

extern int cefingo_menu_model_get_command_id_at(
	struct _cef_menu_model_t* self,
	size_t index
);

extern int cefingo_menu_model_set_command_id_at(
	struct _cef_menu_model_t* self,
	size_t index,
	int command_id
);

extern cef_string_userfree_t cefingo_menu_model_get_label(
	struct _cef_menu_model_t* self,
	int command_id
);

extern cef_string_userfree_t cefingo_menu_model_get_label_at(
	struct _cef_menu_model_t* self,
	size_t index
);

extern int cefingo_menu_model_set_label(
	struct _cef_menu_model_t* self,
	int command_id,
	const cef_string_t* label
);

extern int cefingo_menu_model_set_label_at(
	struct _cef_menu_model_t* self,
	size_t index,
	const cef_string_t* label
);

extern cef_menu_item_type_t cefingo_menu_model_get_type(
	struct _cef_menu_model_t* self,
	int command_id
);

extern cef_menu_item_type_t cefingo_menu_model_get_type_at(
	struct _cef_menu_model_t* self,
	size_t index
);

extern int cefingo_menu_model_get_group_id(
	struct _cef_menu_model_t* self,
	int command_id
);

extern int cefingo_menu_model_get_group_id_at(
	struct _cef_menu_model_t* self,
	size_t index
);

extern int cefingo_menu_model_set_group_id(
	struct _cef_menu_model_t* self,
	int command_id,
	int group_id
);

extern int cefingo_menu_model_set_group_id_at(
	struct _cef_menu_model_t* self,
	size_t index,
	int group_id
);

extern struct _cef_menu_model_t* cefingo_menu_model_get_sub_menu(
	struct _cef_menu_model_t* self,
	int command_id
);

extern struct _cef_menu_model_t* cefingo_menu_model_get_sub_menu_at(
	struct _cef_menu_model_t* self,
	size_t index
);

extern int cefingo_menu_model_is_visible(
	struct _cef_menu_model_t* self,
	int command_id
);

extern int cefingo_menu_model_is_visible_at(
	struct _cef_menu_model_t* self,
	size_t index
);

extern int cefingo_menu_model_set_visible(
	struct _cef_menu_model_t* self,
	int command_id,
	int visible
);

extern int cefingo_menu_model_set_visible_at(
	struct _cef_menu_model_t* self,
	size_t index,
	int visible
);

extern int cefingo_menu_model_is_enabled(
	struct _cef_menu_model_t* self,
	int command_id
);

extern int cefingo_menu_model_is_enabled_at(
	struct _cef_menu_model_t* self,
	size_t index
);

extern int cefingo_menu_model_set_enabled(
	struct _cef_menu_model_t* self,
	int command_id,
	int enabled
);

extern int cefingo_menu_model_set_enabled_at(
	struct _cef_menu_model_t* self,
	size_t index,
	int enabled
);

extern int cefingo_menu_model_is_checked(
	struct _cef_menu_model_t* self,
	int command_id
);

extern int cefingo_menu_model_is_checked_at(
	struct _cef_menu_model_t* self,
	size_t index
);

extern int cefingo_menu_model_set_checked(
	struct _cef_menu_model_t* self,
	int command_id,
	int checked
);

extern int cefingo_menu_model_set_checked_at(
	struct _cef_menu_model_t* self,
	size_t index,
	int checked
);

extern int cefingo_menu_model_has_accelerator(
	struct _cef_menu_model_t* self,
	int command_id
);

extern int cefingo_menu_model_has_accelerator_at(
	struct _cef_menu_model_t* self,
	size_t index
);

extern int cefingo_menu_model_set_accelerator(
	struct _cef_menu_model_t* self,
	int command_id,
	int key_code,
	int shift_pressed,
	int ctrl_pressed,
	int alt_pressed
);

extern int cefingo_menu_model_set_accelerator_at(
	struct _cef_menu_model_t* self,
	size_t index,
	int key_code,
	int shift_pressed,
	int ctrl_pressed,
	int alt_pressed
);

extern int cefingo_menu_model_remove_accelerator(
	struct _cef_menu_model_t* self,
	int command_id
);

extern int cefingo_menu_model_remove_accelerator_at(
	struct _cef_menu_model_t* self,
	size_t index
);

extern int cefingo_menu_model_get_accelerator(
	struct _cef_menu_model_t* self,
	int command_id,
	int* key_code,
	int* shift_pressed,
	int* ctrl_pressed,
	int* alt_pressed
);

extern int cefingo_menu_model_get_accelerator_at(
	struct _cef_menu_model_t* self,
	size_t index,
	int* key_code,
	int* shift_pressed,
	int* ctrl_pressed,
	int* alt_pressed
);

extern int cefingo_menu_model_set_color(
	struct _cef_menu_model_t* self,
	int command_id,
	cef_menu_color_type_t color_type,
	cef_color_t color
);

extern int cefingo_menu_model_set_color_at(
	struct _cef_menu_model_t* self,
	int index,
	cef_menu_color_type_t color_type,
	cef_color_t color
);

extern int cefingo_menu_model_get_color(
	struct _cef_menu_model_t* self,
	int command_id,
	cef_menu_color_type_t color_type,
	cef_color_t* color
);

extern int cefingo_menu_model_get_color_at(
	struct _cef_menu_model_t* self,
	int index,
	cef_menu_color_type_t color_type,
	cef_color_t* color
);

extern int cefingo_menu_model_set_font_list(
	struct _cef_menu_model_t* self,
	int command_id,
	const cef_string_t* font_list
);

extern int cefingo_menu_model_set_font_list_at(
	struct _cef_menu_model_t* self,
	int index,
	const cef_string_t* font_list
);

CEFINGO_REF_COUNTER_WRAPPER(cef_menu_model_delegate_t, cefingo_menu_model_delegate_wrapper_t);
extern cef_menu_model_delegate_t *cefingo_construct_menu_model_delegate(cefingo_menu_model_delegate_wrapper_t* menu_model_delegate);

extern int cefingo_navigation_entry_is_valid(
	struct _cef_navigation_entry_t* self
);

extern cef_string_userfree_t cefingo_navigation_entry_get_url(
	struct _cef_navigation_entry_t* self
);

extern cef_string_userfree_t cefingo_navigation_entry_get_display_url(
	struct _cef_navigation_entry_t* self
);

extern cef_string_userfree_t cefingo_navigation_entry_get_original_url(
	struct _cef_navigation_entry_t* self
);

extern cef_string_userfree_t cefingo_navigation_entry_get_title(
	struct _cef_navigation_entry_t* self
);

extern cef_transition_type_t cefingo_navigation_entry_get_transition_type(
	struct _cef_navigation_entry_t* self
);

extern int cefingo_navigation_entry_has_post_data(
	struct _cef_navigation_entry_t* self
);

extern cef_basetime_t cefingo_navigation_entry_get_completion_time(
	struct _cef_navigation_entry_t* self
);

extern int cefingo_navigation_entry_get_http_status_code(
	struct _cef_navigation_entry_t* self
);

extern struct _cef_sslstatus_t* cefingo_navigation_entry_get_sslstatus(
	struct _cef_navigation_entry_t* self
);

extern int cefingo_overlay_controller_is_valid(
	struct _cef_overlay_controller_t* self
);

extern int cefingo_overlay_controller_is_same(
	struct _cef_overlay_controller_t* self,
	struct _cef_overlay_controller_t* that
);

extern struct _cef_view_t* cefingo_overlay_controller_get_contents_view(
	struct _cef_overlay_controller_t* self
);

extern struct _cef_window_t* cefingo_overlay_controller_get_window(
	struct _cef_overlay_controller_t* self
);

extern cef_docking_mode_t cefingo_overlay_controller_get_docking_mode(
	struct _cef_overlay_controller_t* self
);

extern void cefingo_overlay_controller_destroy(
	struct _cef_overlay_controller_t* self
);

extern void cefingo_overlay_controller_set_bounds(
	struct _cef_overlay_controller_t* self,
	const cef_rect_t* bounds
);

extern cef_rect_t cefingo_overlay_controller_get_bounds(
	struct _cef_overlay_controller_t* self
);

extern cef_rect_t cefingo_overlay_controller_get_bounds_in_screen(
	struct _cef_overlay_controller_t* self
);

extern void cefingo_overlay_controller_set_size(
	struct _cef_overlay_controller_t* self,
	const cef_size_t* size
);

extern cef_size_t cefingo_overlay_controller_get_size(
	struct _cef_overlay_controller_t* self
);

extern void cefingo_overlay_controller_set_position(
	struct _cef_overlay_controller_t* self,
	const cef_point_t* position
);

extern cef_point_t cefingo_overlay_controller_get_position(
	struct _cef_overlay_controller_t* self
);

extern void cefingo_overlay_controller_set_insets(
	struct _cef_overlay_controller_t* self,
	const cef_insets_t* insets
);

extern cef_insets_t cefingo_overlay_controller_get_insets(
	struct _cef_overlay_controller_t* self
);

extern void cefingo_overlay_controller_size_to_preferred_size(
	struct _cef_overlay_controller_t* self
);

extern void cefingo_overlay_controller_set_visible(
	struct _cef_overlay_controller_t* self,
	int visible
);

extern int cefingo_overlay_controller_is_visible(
	struct _cef_overlay_controller_t* self
);

extern int cefingo_overlay_controller_is_drawn(
	struct _cef_overlay_controller_t* self
);

extern struct _cef_window_t* cefingo_panel_as_window(
	struct _cef_panel_t* self
);

extern struct _cef_fill_layout_t* cefingo_panel_set_to_fill_layout(
	struct _cef_panel_t* self
);

extern struct _cef_box_layout_t* cefingo_panel_set_to_box_layout(
	struct _cef_panel_t* self,
	const cef_box_layout_settings_t* settings
);

extern struct _cef_layout_t* cefingo_panel_get_layout(
	struct _cef_panel_t* self
);

extern void cefingo_panel_layout(
	struct _cef_panel_t* self
);

extern void cefingo_panel_add_child_view(
	struct _cef_panel_t* self,
	struct _cef_view_t* view
);

extern void cefingo_panel_add_child_view_at(
	struct _cef_panel_t* self,
	struct _cef_view_t* view,
	int index
);

extern void cefingo_panel_reorder_child_view(
	struct _cef_panel_t* self,
	struct _cef_view_t* view,
	int index
);

extern void cefingo_panel_remove_child_view(
	struct _cef_panel_t* self,
	struct _cef_view_t* view
);

extern void cefingo_panel_remove_all_child_views(
	struct _cef_panel_t* self
);

extern size_t cefingo_panel_get_child_view_count(
	struct _cef_panel_t* self
);

extern struct _cef_view_t* cefingo_panel_get_child_view_at(
	struct _cef_panel_t* self,
	int index
);

CEFINGO_REF_COUNTER_WRAPPER(cef_panel_delegate_t, cefingo_panel_delegate_wrapper_t);
extern cef_panel_delegate_t *cefingo_construct_panel_delegate(cefingo_panel_delegate_wrapper_t* panel_delegate);

extern void cefingo_media_access_callback_cont(
	struct _cef_media_access_callback_t* self,
	uint32 allowed_permissions
);

extern void cefingo_media_access_callback_cancel(
	struct _cef_media_access_callback_t* self
);

extern void cefingo_permission_prompt_callback_cont(
	struct _cef_permission_prompt_callback_t* self,
	cef_permission_request_result_t result
);

extern int cefingo_permission_handler_on_request_media_access_permission(
	struct _cef_permission_handler_t* self,
	struct _cef_browser_t* browser,
	struct _cef_frame_t* frame,
	const cef_string_t* requesting_origin,
	uint32 requested_permissions,
	struct _cef_media_access_callback_t* callback
);

extern int cefingo_permission_handler_on_show_permission_prompt(
	struct _cef_permission_handler_t* self,
	struct _cef_browser_t* browser,
	uint64 prompt_id,
	const cef_string_t* requesting_origin,
	uint32 requested_permissions,
	struct _cef_permission_prompt_callback_t* callback
);

extern void cefingo_permission_handler_on_dismiss_permission_prompt(
	struct _cef_permission_handler_t* self,
	struct _cef_browser_t* browser,
	uint64 prompt_id,
	cef_permission_request_result_t result
);

extern int cefingo_preference_registrar_add_preference(
	struct _cef_preference_registrar_t* self,
	const cef_string_t* name,
	struct _cef_value_t* default_value
);

extern int cefingo_preference_manager_has_preference(
	struct _cef_preference_manager_t* self,
	const cef_string_t* name
);

extern struct _cef_value_t* cefingo_preference_manager_get_preference(
	struct _cef_preference_manager_t* self,
	const cef_string_t* name
);

extern struct _cef_dictionary_value_t* cefingo_preference_manager_get_all_preferences(
	struct _cef_preference_manager_t* self,
	int include_defaults
);

extern int cefingo_preference_manager_can_set_preference(
	struct _cef_preference_manager_t* self,
	const cef_string_t* name
);

extern int cefingo_preference_manager_set_preference(
	struct _cef_preference_manager_t* self,
	const cef_string_t* name,
	struct _cef_value_t* value,
	cef_string_t* error
);

extern void cefingo_print_dialog_callback_cont(
	struct _cef_print_dialog_callback_t* self,
	struct _cef_print_settings_t* settings
);

extern void cefingo_print_dialog_callback_cancel(
	struct _cef_print_dialog_callback_t* self
);

extern void cefingo_print_job_callback_cont(
	struct _cef_print_job_callback_t* self
);

CEFINGO_REF_COUNTER_WRAPPER(cef_print_handler_t, cefingo_print_handler_wrapper_t);
extern cef_print_handler_t *cefingo_construct_print_handler(cefingo_print_handler_wrapper_t* print_handler);

extern int cefingo_print_settings_is_valid(
	struct _cef_print_settings_t* self
);

extern int cefingo_print_settings_is_read_only(
	struct _cef_print_settings_t* self
);

extern void cefingo_print_settings_set_orientation(
	struct _cef_print_settings_t* self,
	int landscape
);

extern int cefingo_print_settings_is_landscape(
	struct _cef_print_settings_t* self
);

extern void cefingo_print_settings_set_printer_printable_area(
	struct _cef_print_settings_t* self,
	const cef_size_t* physical_size_device_units,
	const cef_rect_t* printable_area_device_units,
	int landscape_needs_flip
);

extern void cefingo_print_settings_set_device_name(
	struct _cef_print_settings_t* self,
	const cef_string_t* name
);

extern cef_string_userfree_t cefingo_print_settings_get_device_name(
	struct _cef_print_settings_t* self
);

extern void cefingo_print_settings_set_dpi(
	struct _cef_print_settings_t* self,
	int dpi
);

extern int cefingo_print_settings_get_dpi(
	struct _cef_print_settings_t* self
);

extern void cefingo_print_settings_set_page_ranges(
	struct _cef_print_settings_t* self,
	size_t rangesCount,
	const cef_range_t* ranges
);

extern size_t cefingo_print_settings_get_page_ranges_count(
	struct _cef_print_settings_t* self
);

extern void cefingo_print_settings_set_selection_only(
	struct _cef_print_settings_t* self,
	int selection_only
);

extern int cefingo_print_settings_is_selection_only(
	struct _cef_print_settings_t* self
);

extern void cefingo_print_settings_set_collate(
	struct _cef_print_settings_t* self,
	int collate
);

extern int cefingo_print_settings_will_collate(
	struct _cef_print_settings_t* self
);

extern void cefingo_print_settings_set_color_model(
	struct _cef_print_settings_t* self,
	cef_color_model_t model
);

extern cef_color_model_t cefingo_print_settings_get_color_model(
	struct _cef_print_settings_t* self
);

extern void cefingo_print_settings_set_copies(
	struct _cef_print_settings_t* self,
	int copies
);

extern int cefingo_print_settings_get_copies(
	struct _cef_print_settings_t* self
);

extern void cefingo_print_settings_set_duplex_mode(
	struct _cef_print_settings_t* self,
	cef_duplex_mode_t mode
);

extern cef_duplex_mode_t cefingo_print_settings_get_duplex_mode(
	struct _cef_print_settings_t* self
);

extern int cefingo_process_message_is_valid(
	struct _cef_process_message_t* self
);

extern int cefingo_process_message_is_read_only(
	struct _cef_process_message_t* self
);

extern struct _cef_process_message_t* cefingo_process_message_copy(
	struct _cef_process_message_t* self
);

extern cef_string_userfree_t cefingo_process_message_get_name(
	struct _cef_process_message_t* self
);

extern struct _cef_list_value_t* cefingo_process_message_get_argument_list(
	struct _cef_process_message_t* self
);

extern struct _cef_shared_memory_region_t* cefingo_process_message_get_shared_memory_region(
	struct _cef_process_message_t* self
);

CEFINGO_REF_COUNTER_WRAPPER(cef_render_handler_t, cefingo_render_handler_wrapper_t);
extern cef_render_handler_t *cefingo_construct_render_handler(cefingo_render_handler_wrapper_t* render_handler);

CEFINGO_REF_COUNTER_WRAPPER(cef_render_process_handler_t, cefingo_render_process_handler_wrapper_t);
extern cef_render_process_handler_t *cefingo_construct_render_process_handler(cefingo_render_process_handler_wrapper_t* render_process_handler);

extern int cefingo_request_is_read_only(
	struct _cef_request_t* self
);

extern cef_string_userfree_t cefingo_request_get_url(
	struct _cef_request_t* self
);

extern void cefingo_request_set_url(
	struct _cef_request_t* self,
	const cef_string_t* url
);

extern cef_string_userfree_t cefingo_request_get_method(
	struct _cef_request_t* self
);

extern void cefingo_request_set_method(
	struct _cef_request_t* self,
	const cef_string_t* method
);

extern void cefingo_request_set_referrer(
	struct _cef_request_t* self,
	const cef_string_t* referrer_url,
	cef_referrer_policy_t policy
);

extern cef_string_userfree_t cefingo_request_get_referrer_url(
	struct _cef_request_t* self
);

extern cef_referrer_policy_t cefingo_request_get_referrer_policy(
	struct _cef_request_t* self
);

extern struct _cef_post_data_t* cefingo_request_get_post_data(
	struct _cef_request_t* self
);

extern void cefingo_request_set_post_data(
	struct _cef_request_t* self,
	struct _cef_post_data_t* postData
);

extern void cefingo_request_get_header_map(
	struct _cef_request_t* self,
	cef_string_multimap_t headerMap
);

extern void cefingo_request_set_header_map(
	struct _cef_request_t* self,
	cef_string_multimap_t headerMap
);

extern cef_string_userfree_t cefingo_request_get_header_by_name(
	struct _cef_request_t* self,
	const cef_string_t* name
);

extern void cefingo_request_set_header_by_name(
	struct _cef_request_t* self,
	const cef_string_t* name,
	const cef_string_t* value,
	int overwrite
);

extern void cefingo_request_set(
	struct _cef_request_t* self,
	const cef_string_t* url,
	const cef_string_t* method,
	struct _cef_post_data_t* postData,
	cef_string_multimap_t headerMap
);

extern int cefingo_request_get_flags(
	struct _cef_request_t* self
);

extern void cefingo_request_set_flags(
	struct _cef_request_t* self,
	int flags
);

extern cef_string_userfree_t cefingo_request_get_first_party_for_cookies(
	struct _cef_request_t* self
);

extern void cefingo_request_set_first_party_for_cookies(
	struct _cef_request_t* self,
	const cef_string_t* url
);

extern cef_resource_type_t cefingo_request_get_resource_type(
	struct _cef_request_t* self
);

extern cef_transition_type_t cefingo_request_get_transition_type(
	struct _cef_request_t* self
);

extern uint64 cefingo_request_get_identifier(
	struct _cef_request_t* self
);

extern int cefingo_post_data_is_read_only(
	struct _cef_post_data_t* self
);

extern int cefingo_post_data_has_excluded_elements(
	struct _cef_post_data_t* self
);

extern size_t cefingo_post_data_get_element_count(
	struct _cef_post_data_t* self
);

extern void cefingo_post_data_get_elements(
	struct _cef_post_data_t* self,
	size_t* elementsCount,
	struct _cef_post_data_element_t** elements
);

extern int cefingo_post_data_remove_element(
	struct _cef_post_data_t* self,
	struct _cef_post_data_element_t* element
);

extern int cefingo_post_data_add_element(
	struct _cef_post_data_t* self,
	struct _cef_post_data_element_t* element
);

extern void cefingo_post_data_remove_elements(
	struct _cef_post_data_t* self
);

extern int cefingo_post_data_element_is_read_only(
	struct _cef_post_data_element_t* self
);

extern void cefingo_post_data_element_set_to_empty(
	struct _cef_post_data_element_t* self
);

extern void cefingo_post_data_element_set_to_file(
	struct _cef_post_data_element_t* self,
	const cef_string_t* fileName
);

extern void cefingo_post_data_element_set_to_bytes(
	struct _cef_post_data_element_t* self,
	size_t size,
	const void* bytes
);

extern cef_postdataelement_type_t cefingo_post_data_element_get_type(
	struct _cef_post_data_element_t* self
);

extern cef_string_userfree_t cefingo_post_data_element_get_file(
	struct _cef_post_data_element_t* self
);

extern size_t cefingo_post_data_element_get_bytes_count(
	struct _cef_post_data_element_t* self
);

extern size_t cefingo_post_data_element_get_bytes(
	struct _cef_post_data_element_t* self,
	size_t size,
	void* bytes
);

extern void cefingo_resolve_callback_on_resolve_completed(
	struct _cef_resolve_callback_t* self,
	cef_errorcode_t result,
	cef_string_list_t resolved_ips
);

extern int cefingo_request_context_is_same(
	struct _cef_request_context_t* self,
	struct _cef_request_context_t* other
);

extern int cefingo_request_context_is_sharing_with(
	struct _cef_request_context_t* self,
	struct _cef_request_context_t* other
);

extern int cefingo_request_context_is_global(
	struct _cef_request_context_t* self
);

extern struct _cef_request_context_handler_t* cefingo_request_context_get_handler(
	struct _cef_request_context_t* self
);

extern cef_string_userfree_t cefingo_request_context_get_cache_path(
	struct _cef_request_context_t* self
);

extern struct _cef_cookie_manager_t* cefingo_request_context_get_cookie_manager(
	struct _cef_request_context_t* self,
	struct _cef_completion_callback_t* callback
);

extern int cefingo_request_context_register_scheme_handler_factory(
	struct _cef_request_context_t* self,
	const cef_string_t* scheme_name,
	const cef_string_t* domain_name,
	struct _cef_scheme_handler_factory_t* factory
);

extern int cefingo_request_context_clear_scheme_handler_factories(
	struct _cef_request_context_t* self
);

extern void cefingo_request_context_clear_certificate_exceptions(
	struct _cef_request_context_t* self,
	struct _cef_completion_callback_t* callback
);

extern void cefingo_request_context_clear_http_auth_credentials(
	struct _cef_request_context_t* self,
	struct _cef_completion_callback_t* callback
);

extern void cefingo_request_context_close_all_connections(
	struct _cef_request_context_t* self,
	struct _cef_completion_callback_t* callback
);

extern void cefingo_request_context_resolve_host(
	struct _cef_request_context_t* self,
	const cef_string_t* origin,
	struct _cef_resolve_callback_t* callback
);

extern void cefingo_request_context_load_extension(
	struct _cef_request_context_t* self,
	const cef_string_t* root_directory,
	struct _cef_dictionary_value_t* manifest,
	struct _cef_extension_handler_t* handler
);

extern int cefingo_request_context_did_load_extension(
	struct _cef_request_context_t* self,
	const cef_string_t* extension_id
);

extern int cefingo_request_context_has_extension(
	struct _cef_request_context_t* self,
	const cef_string_t* extension_id
);

extern int cefingo_request_context_get_extensions(
	struct _cef_request_context_t* self,
	cef_string_list_t extension_ids
);

extern struct _cef_extension_t* cefingo_request_context_get_extension(
	struct _cef_request_context_t* self,
	const cef_string_t* extension_id
);

extern struct _cef_media_router_t* cefingo_request_context_get_media_router(
	struct _cef_request_context_t* self,
	struct _cef_completion_callback_t* callback
);

CEFINGO_REF_COUNTER_WRAPPER(cef_request_context_handler_t, cefingo_request_context_handler_wrapper_t);
extern cef_request_context_handler_t *cefingo_construct_request_context_handler(cefingo_request_context_handler_wrapper_t* request_context_handler);

extern void cefingo_select_client_certificate_callback_select(
	struct _cef_select_client_certificate_callback_t* self,
	struct _cef_x509certificate_t* cert
);

CEFINGO_REF_COUNTER_WRAPPER(cef_request_handler_t, cefingo_request_handler_wrapper_t);
extern cef_request_handler_t *cefingo_construct_request_handler(cefingo_request_handler_wrapper_t* request_handler);

CEFINGO_REF_COUNTER_WRAPPER(cef_resource_bundle_handler_t, cefingo_resource_bundle_handler_wrapper_t);
extern cef_resource_bundle_handler_t *cefingo_construct_resource_bundle_handler(cefingo_resource_bundle_handler_wrapper_t* resource_bundle_handler);

extern void cefingo_resource_skip_callback_cont(
	struct _cef_resource_skip_callback_t* self,
	int64 bytes_skipped
);

extern void cefingo_resource_read_callback_cont(
	struct _cef_resource_read_callback_t* self,
	int bytes_read
);

CEFINGO_REF_COUNTER_WRAPPER(cef_resource_handler_t, cefingo_resource_handler_wrapper_t);
extern cef_resource_handler_t *cefingo_construct_resource_handler(cefingo_resource_handler_wrapper_t* resource_handler);

CEFINGO_REF_COUNTER_WRAPPER(cef_resource_request_handler_t, cefingo_resource_request_handler_wrapper_t);
extern cef_resource_request_handler_t *cefingo_construct_resource_request_handler(cefingo_resource_request_handler_wrapper_t* resource_request_handler);

CEFINGO_REF_COUNTER_WRAPPER(cef_cookie_access_filter_t, cefingo_cookie_access_filter_wrapper_t);
extern cef_cookie_access_filter_t *cefingo_construct_cookie_access_filter(cefingo_cookie_access_filter_wrapper_t* cookie_access_filter);

extern int cefingo_response_is_read_only(
	struct _cef_response_t* self
);

extern cef_errorcode_t cefingo_response_get_error(
	struct _cef_response_t* self
);

extern void cefingo_response_set_error(
	struct _cef_response_t* self,
	cef_errorcode_t error
);

extern int cefingo_response_get_status(
	struct _cef_response_t* self
);

extern void cefingo_response_set_status(
	struct _cef_response_t* self,
	int status
);

extern cef_string_userfree_t cefingo_response_get_status_text(
	struct _cef_response_t* self
);

extern void cefingo_response_set_status_text(
	struct _cef_response_t* self,
	const cef_string_t* statusText
);

extern cef_string_userfree_t cefingo_response_get_mime_type(
	struct _cef_response_t* self
);

extern void cefingo_response_set_mime_type(
	struct _cef_response_t* self,
	const cef_string_t* mimeType
);

extern cef_string_userfree_t cefingo_response_get_charset(
	struct _cef_response_t* self
);

extern void cefingo_response_set_charset(
	struct _cef_response_t* self,
	const cef_string_t* charset
);

extern cef_string_userfree_t cefingo_response_get_header_by_name(
	struct _cef_response_t* self,
	const cef_string_t* name
);

extern void cefingo_response_set_header_by_name(
	struct _cef_response_t* self,
	const cef_string_t* name,
	const cef_string_t* value,
	int overwrite
);

extern void cefingo_response_get_header_map(
	struct _cef_response_t* self,
	cef_string_multimap_t headerMap
);

extern void cefingo_response_set_header_map(
	struct _cef_response_t* self,
	cef_string_multimap_t headerMap
);

extern cef_string_userfree_t cefingo_response_get_url(
	struct _cef_response_t* self
);

extern void cefingo_response_set_url(
	struct _cef_response_t* self,
	const cef_string_t* url
);

CEFINGO_REF_COUNTER_WRAPPER(cef_response_filter_t, cefingo_response_filter_wrapper_t);
extern cef_response_filter_t *cefingo_construct_response_filter(cefingo_response_filter_wrapper_t* response_filter);

extern int cefingo_scheme_registrar_add_custom_scheme(
	struct _cef_scheme_registrar_t* self,
	const cef_string_t* scheme_name,
	int options
);

CEFINGO_REF_COUNTER_WRAPPER(cef_scheme_handler_factory_t, cefingo_scheme_handler_factory_wrapper_t);
extern cef_scheme_handler_factory_t *cefingo_construct_scheme_handler_factory(cefingo_scheme_handler_factory_wrapper_t* scheme_handler_factory);

extern void cefingo_scroll_view_set_content_view(
	struct _cef_scroll_view_t* self,
	struct _cef_view_t* view
);

extern struct _cef_view_t* cefingo_scroll_view_get_content_view(
	struct _cef_scroll_view_t* self
);

extern cef_rect_t cefingo_scroll_view_get_visible_content_rect(
	struct _cef_scroll_view_t* self
);

extern int cefingo_scroll_view_has_horizontal_scrollbar(
	struct _cef_scroll_view_t* self
);

extern int cefingo_scroll_view_get_horizontal_scrollbar_height(
	struct _cef_scroll_view_t* self
);

extern int cefingo_scroll_view_has_vertical_scrollbar(
	struct _cef_scroll_view_t* self
);

extern int cefingo_scroll_view_get_vertical_scrollbar_width(
	struct _cef_scroll_view_t* self
);

extern int cefingo_shared_memory_region_is_valid(
	struct _cef_shared_memory_region_t* self
);

extern size_t cefingo_shared_memory_region_size(
	struct _cef_shared_memory_region_t* self
);

extern const void* cefingo_shared_memory_region_memory(
	struct _cef_shared_memory_region_t* self
);

extern cef_cert_status_t cefingo_sslinfo_get_cert_status(
	struct _cef_sslinfo_t* self
);

extern struct _cef_x509certificate_t* cefingo_sslinfo_get_x509certificate(
	struct _cef_sslinfo_t* self
);

extern int cefingo_sslstatus_is_secure_connection(
	struct _cef_sslstatus_t* self
);

extern cef_cert_status_t cefingo_sslstatus_get_cert_status(
	struct _cef_sslstatus_t* self
);

extern cef_ssl_version_t cefingo_sslstatus_get_sslversion(
	struct _cef_sslstatus_t* self
);

extern cef_ssl_content_status_t cefingo_sslstatus_get_content_status(
	struct _cef_sslstatus_t* self
);

extern struct _cef_x509certificate_t* cefingo_sslstatus_get_x509certificate(
	struct _cef_sslstatus_t* self
);

CEFINGO_REF_COUNTER_WRAPPER(cef_read_handler_t, cefingo_read_handler_wrapper_t);
extern cef_read_handler_t *cefingo_construct_read_handler(cefingo_read_handler_wrapper_t* read_handler);

extern size_t cefingo_stream_reader_read(
	struct _cef_stream_reader_t* self,
	void* ptr,
	size_t size,
	size_t n
);

extern int cefingo_stream_reader_seek(
	struct _cef_stream_reader_t* self,
	int64 offset,
	int whence
);

extern int64 cefingo_stream_reader_tell(
	struct _cef_stream_reader_t* self
);

extern int cefingo_stream_reader_eof(
	struct _cef_stream_reader_t* self
);

extern int cefingo_stream_reader_may_block(
	struct _cef_stream_reader_t* self
);

CEFINGO_REF_COUNTER_WRAPPER(cef_write_handler_t, cefingo_write_handler_wrapper_t);
extern cef_write_handler_t *cefingo_construct_write_handler(cefingo_write_handler_wrapper_t* write_handler);

extern size_t cefingo_stream_writer_write(
	struct _cef_stream_writer_t* self,
	const void* ptr,
	size_t size,
	size_t n
);

extern int cefingo_stream_writer_seek(
	struct _cef_stream_writer_t* self,
	int64 offset,
	int whence
);

extern int64 cefingo_stream_writer_tell(
	struct _cef_stream_writer_t* self
);

extern int cefingo_stream_writer_flush(
	struct _cef_stream_writer_t* self
);

extern int cefingo_stream_writer_may_block(
	struct _cef_stream_writer_t* self
);

CEFINGO_REF_COUNTER_WRAPPER(cef_string_visitor_t, cefingo_string_visitor_wrapper_t);
extern cef_string_visitor_t *cefingo_construct_string_visitor(cefingo_string_visitor_wrapper_t* string_visitor);

CEFINGO_REF_COUNTER_WRAPPER(cef_task_t, cefingo_task_wrapper_t);
extern cef_task_t *cefingo_construct_task(cefingo_task_wrapper_t* task);

extern int cefingo_task_runner_is_same(
	struct _cef_task_runner_t* self,
	struct _cef_task_runner_t* that
);

extern int cefingo_task_runner_belongs_to_current_thread(
	struct _cef_task_runner_t* self
);

extern int cefingo_task_runner_belongs_to_thread(
	struct _cef_task_runner_t* self,
	cef_thread_id_t threadId
);

extern int cefingo_task_runner_post_task(
	struct _cef_task_runner_t* self,
	struct _cef_task_t* task
);

extern int cefingo_task_runner_post_delayed_task(
	struct _cef_task_runner_t* self,
	struct _cef_task_t* task,
	int64 delay_ms
);

extern void cefingo_textfield_set_password_input(
	struct _cef_textfield_t* self,
	int password_input
);

extern int cefingo_textfield_is_password_input(
	struct _cef_textfield_t* self
);

extern void cefingo_textfield_set_read_only(
	struct _cef_textfield_t* self,
	int read_only
);

extern int cefingo_textfield_is_read_only(
	struct _cef_textfield_t* self
);

extern cef_string_userfree_t cefingo_textfield_get_text(
	struct _cef_textfield_t* self
);

extern void cefingo_textfield_set_text(
	struct _cef_textfield_t* self,
	const cef_string_t* text
);

extern void cefingo_textfield_append_text(
	struct _cef_textfield_t* self,
	const cef_string_t* text
);

extern void cefingo_textfield_insert_or_replace_text(
	struct _cef_textfield_t* self,
	const cef_string_t* text
);

extern int cefingo_textfield_has_selection(
	struct _cef_textfield_t* self
);

extern cef_string_userfree_t cefingo_textfield_get_selected_text(
	struct _cef_textfield_t* self
);

extern void cefingo_textfield_select_all(
	struct _cef_textfield_t* self,
	int reversed
);

extern void cefingo_textfield_clear_selection(
	struct _cef_textfield_t* self
);

extern cef_range_t cefingo_textfield_get_selected_range(
	struct _cef_textfield_t* self
);

extern void cefingo_textfield_select_range(
	struct _cef_textfield_t* self,
	const cef_range_t* range
);

extern size_t cefingo_textfield_get_cursor_position(
	struct _cef_textfield_t* self
);

extern void cefingo_textfield_set_text_color(
	struct _cef_textfield_t* self,
	cef_color_t color
);

extern cef_color_t cefingo_textfield_get_text_color(
	struct _cef_textfield_t* self
);

extern void cefingo_textfield_set_selection_text_color(
	struct _cef_textfield_t* self,
	cef_color_t color
);

extern cef_color_t cefingo_textfield_get_selection_text_color(
	struct _cef_textfield_t* self
);

extern void cefingo_textfield_set_selection_background_color(
	struct _cef_textfield_t* self,
	cef_color_t color
);

extern cef_color_t cefingo_textfield_get_selection_background_color(
	struct _cef_textfield_t* self
);

extern void cefingo_textfield_set_font_list(
	struct _cef_textfield_t* self,
	const cef_string_t* font_list
);

extern void cefingo_textfield_apply_text_color(
	struct _cef_textfield_t* self,
	cef_color_t color,
	const cef_range_t* range
);

extern void cefingo_textfield_apply_text_style(
	struct _cef_textfield_t* self,
	cef_text_style_t style,
	int add,
	const cef_range_t* range
);

extern int cefingo_textfield_is_command_enabled(
	struct _cef_textfield_t* self,
	cef_text_field_commands_t command_id
);

extern void cefingo_textfield_execute_command(
	struct _cef_textfield_t* self,
	cef_text_field_commands_t command_id
);

extern void cefingo_textfield_clear_edit_history(
	struct _cef_textfield_t* self
);

extern void cefingo_textfield_set_placeholder_text(
	struct _cef_textfield_t* self,
	const cef_string_t* text
);

extern cef_string_userfree_t cefingo_textfield_get_placeholder_text(
	struct _cef_textfield_t* self
);

extern void cefingo_textfield_set_placeholder_text_color(
	struct _cef_textfield_t* self,
	cef_color_t color
);

extern void cefingo_textfield_set_accessible_name(
	struct _cef_textfield_t* self,
	const cef_string_t* name
);

CEFINGO_REF_COUNTER_WRAPPER(cef_textfield_delegate_t, cefingo_textfield_delegate_wrapper_t);
extern cef_textfield_delegate_t *cefingo_construct_textfield_delegate(cefingo_textfield_delegate_wrapper_t* textfield_delegate);

CEFINGO_REF_COUNTER_WRAPPER(cef_end_tracing_callback_t, cefingo_end_tracing_callback_wrapper_t);
extern cef_end_tracing_callback_t *cefingo_construct_end_tracing_callback(cefingo_end_tracing_callback_wrapper_t* end_tracing_callback);

extern struct _cef_request_t* cefingo_urlrequest_get_request(
	struct _cef_urlrequest_t* self
);

extern struct _cef_urlrequest_client_t* cefingo_urlrequest_get_client(
	struct _cef_urlrequest_t* self
);

extern cef_urlrequest_status_t cefingo_urlrequest_get_request_status(
	struct _cef_urlrequest_t* self
);

extern cef_errorcode_t cefingo_urlrequest_get_request_error(
	struct _cef_urlrequest_t* self
);

extern struct _cef_response_t* cefingo_urlrequest_get_response(
	struct _cef_urlrequest_t* self
);

extern int cefingo_urlrequest_response_was_cached(
	struct _cef_urlrequest_t* self
);

extern void cefingo_urlrequest_cancel(
	struct _cef_urlrequest_t* self
);

CEFINGO_REF_COUNTER_WRAPPER(cef_urlrequest_client_t, cefingo_urlrequest_client_wrapper_t);
extern cef_urlrequest_client_t *cefingo_construct_urlrequest_client(cefingo_urlrequest_client_wrapper_t* urlrequest_client);

extern struct _cef_task_runner_t* cefingo_v8context_get_task_runner(
	struct _cef_v8context_t* self
);

extern int cefingo_v8context_is_valid(
	struct _cef_v8context_t* self
);

extern struct _cef_browser_t* cefingo_v8context_get_browser(
	struct _cef_v8context_t* self
);

extern struct _cef_frame_t* cefingo_v8context_get_frame(
	struct _cef_v8context_t* self
);

extern struct _cef_v8value_t* cefingo_v8context_get_global(
	struct _cef_v8context_t* self
);

extern int cefingo_v8context_enter(
	struct _cef_v8context_t* self
);

extern int cefingo_v8context_exit(
	struct _cef_v8context_t* self
);

extern int cefingo_v8context_is_same(
	struct _cef_v8context_t* self,
	struct _cef_v8context_t* that
);

extern int cefingo_v8context_eval(
	struct _cef_v8context_t* self,
	const cef_string_t* code,
	const cef_string_t* script_url,
	int start_line,
	struct _cef_v8value_t** retval,
	struct _cef_v8exception_t** exception
);

CEFINGO_REF_COUNTER_WRAPPER(cef_v8handler_t, cefingo_v8handler_wrapper_t);
extern cef_v8handler_t *cefingo_construct_v8handler(cefingo_v8handler_wrapper_t* v8handler);

CEFINGO_REF_COUNTER_WRAPPER(cef_v8accessor_t, cefingo_v8accessor_wrapper_t);
extern cef_v8accessor_t *cefingo_construct_v8accessor(cefingo_v8accessor_wrapper_t* v8accessor);

extern int cefingo_v8interceptor_get_byname(
	struct _cef_v8interceptor_t* self,
	const cef_string_t* name,
	struct _cef_v8value_t* object,
	struct _cef_v8value_t** retval,
	cef_string_t* exception
);

extern int cefingo_v8interceptor_get_byindex(
	struct _cef_v8interceptor_t* self,
	int index,
	struct _cef_v8value_t* object,
	struct _cef_v8value_t** retval,
	cef_string_t* exception
);

extern int cefingo_v8interceptor_set_byname(
	struct _cef_v8interceptor_t* self,
	const cef_string_t* name,
	struct _cef_v8value_t* object,
	struct _cef_v8value_t* value,
	cef_string_t* exception
);

extern int cefingo_v8interceptor_set_byindex(
	struct _cef_v8interceptor_t* self,
	int index,
	struct _cef_v8value_t* object,
	struct _cef_v8value_t* value,
	cef_string_t* exception
);

extern cef_string_userfree_t cefingo_v8exception_get_message(
	struct _cef_v8exception_t* self
);

extern cef_string_userfree_t cefingo_v8exception_get_source_line(
	struct _cef_v8exception_t* self
);

extern cef_string_userfree_t cefingo_v8exception_get_script_resource_name(
	struct _cef_v8exception_t* self
);

extern int cefingo_v8exception_get_line_number(
	struct _cef_v8exception_t* self
);

extern int cefingo_v8exception_get_start_position(
	struct _cef_v8exception_t* self
);

extern int cefingo_v8exception_get_end_position(
	struct _cef_v8exception_t* self
);

extern int cefingo_v8exception_get_start_column(
	struct _cef_v8exception_t* self
);

extern int cefingo_v8exception_get_end_column(
	struct _cef_v8exception_t* self
);

CEFINGO_REF_COUNTER_WRAPPER(cef_v8array_buffer_release_callback_t, cefingo_v8array_buffer_release_callback_wrapper_t);
extern cef_v8array_buffer_release_callback_t *cefingo_construct_v8array_buffer_release_callback(cefingo_v8array_buffer_release_callback_wrapper_t* v8array_buffer_release_callback);

extern int cefingo_v8value_is_valid(
	struct _cef_v8value_t* self
);

extern int cefingo_v8value_is_undefined(
	struct _cef_v8value_t* self
);

extern int cefingo_v8value_is_null(
	struct _cef_v8value_t* self
);

extern int cefingo_v8value_is_bool(
	struct _cef_v8value_t* self
);

extern int cefingo_v8value_is_int(
	struct _cef_v8value_t* self
);

extern int cefingo_v8value_is_uint(
	struct _cef_v8value_t* self
);

extern int cefingo_v8value_is_double(
	struct _cef_v8value_t* self
);

extern int cefingo_v8value_is_date(
	struct _cef_v8value_t* self
);

extern int cefingo_v8value_is_string(
	struct _cef_v8value_t* self
);

extern int cefingo_v8value_is_object(
	struct _cef_v8value_t* self
);

extern int cefingo_v8value_is_array(
	struct _cef_v8value_t* self
);

extern int cefingo_v8value_is_array_buffer(
	struct _cef_v8value_t* self
);

extern int cefingo_v8value_is_function(
	struct _cef_v8value_t* self
);

extern int cefingo_v8value_is_promise(
	struct _cef_v8value_t* self
);

extern int cefingo_v8value_is_same(
	struct _cef_v8value_t* self,
	struct _cef_v8value_t* that
);

extern int cefingo_v8value_get_bool_value(
	struct _cef_v8value_t* self
);

extern int32 cefingo_v8value_get_int_value(
	struct _cef_v8value_t* self
);

extern uint32 cefingo_v8value_get_uint_value(
	struct _cef_v8value_t* self
);

extern double cefingo_v8value_get_double_value(
	struct _cef_v8value_t* self
);

extern cef_basetime_t cefingo_v8value_get_date_value(
	struct _cef_v8value_t* self
);

extern cef_string_userfree_t cefingo_v8value_get_string_value(
	struct _cef_v8value_t* self
);

extern int cefingo_v8value_is_user_created(
	struct _cef_v8value_t* self
);

extern int cefingo_v8value_has_exception(
	struct _cef_v8value_t* self
);

extern struct _cef_v8exception_t* cefingo_v8value_get_exception(
	struct _cef_v8value_t* self
);

extern int cefingo_v8value_clear_exception(
	struct _cef_v8value_t* self
);

extern int cefingo_v8value_will_rethrow_exceptions(
	struct _cef_v8value_t* self
);

extern int cefingo_v8value_set_rethrow_exceptions(
	struct _cef_v8value_t* self,
	int rethrow
);

extern int cefingo_v8value_has_value_bykey(
	struct _cef_v8value_t* self,
	const cef_string_t* key
);

extern int cefingo_v8value_has_value_byindex(
	struct _cef_v8value_t* self,
	int index
);

extern int cefingo_v8value_delete_value_bykey(
	struct _cef_v8value_t* self,
	const cef_string_t* key
);

extern int cefingo_v8value_delete_value_byindex(
	struct _cef_v8value_t* self,
	int index
);

extern struct _cef_v8value_t* cefingo_v8value_get_value_bykey(
	struct _cef_v8value_t* self,
	const cef_string_t* key
);

extern struct _cef_v8value_t* cefingo_v8value_get_value_byindex(
	struct _cef_v8value_t* self,
	int index
);

extern int cefingo_v8value_set_value_bykey(
	struct _cef_v8value_t* self,
	const cef_string_t* key,
	struct _cef_v8value_t* value,
	cef_v8_propertyattribute_t attribute
);

extern int cefingo_v8value_set_value_byindex(
	struct _cef_v8value_t* self,
	int index,
	struct _cef_v8value_t* value
);

extern int cefingo_v8value_set_value_byaccessor(
	struct _cef_v8value_t* self,
	const cef_string_t* key,
	cef_v8_accesscontrol_t settings,
	cef_v8_propertyattribute_t attribute
);

extern int cefingo_v8value_get_keys(
	struct _cef_v8value_t* self,
	cef_string_list_t keys
);

extern int cefingo_v8value_get_externally_allocated_memory(
	struct _cef_v8value_t* self
);

extern int cefingo_v8value_adjust_externally_allocated_memory(
	struct _cef_v8value_t* self,
	int change_in_bytes
);

extern int cefingo_v8value_get_array_length(
	struct _cef_v8value_t* self
);

extern struct _cef_v8array_buffer_release_callback_t* cefingo_v8value_get_array_buffer_release_callback(
	struct _cef_v8value_t* self
);

extern int cefingo_v8value_neuter_array_buffer(
	struct _cef_v8value_t* self
);

extern cef_string_userfree_t cefingo_v8value_get_function_name(
	struct _cef_v8value_t* self
);

extern struct _cef_v8handler_t* cefingo_v8value_get_function_handler(
	struct _cef_v8value_t* self
);

extern struct _cef_v8value_t* cefingo_v8value_execute_function(
	struct _cef_v8value_t* self,
	struct _cef_v8value_t* object,
	size_t argumentsCount,
	struct _cef_v8value_t* const * arguments
);

extern struct _cef_v8value_t* cefingo_v8value_execute_function_with_context(
	struct _cef_v8value_t* self,
	struct _cef_v8context_t* context,
	struct _cef_v8value_t* object,
	size_t argumentsCount,
	struct _cef_v8value_t* const * arguments
);

extern int cefingo_v8value_resolve_promise(
	struct _cef_v8value_t* self,
	struct _cef_v8value_t* arg
);

extern int cefingo_v8value_reject_promise(
	struct _cef_v8value_t* self,
	const cef_string_t* errorMsg
);

extern int cefingo_v8stack_trace_is_valid(
	struct _cef_v8stack_trace_t* self
);

extern int cefingo_v8stack_trace_get_frame_count(
	struct _cef_v8stack_trace_t* self
);

extern struct _cef_v8stack_frame_t* cefingo_v8stack_trace_get_frame(
	struct _cef_v8stack_trace_t* self,
	int index
);

extern int cefingo_v8stack_frame_is_valid(
	struct _cef_v8stack_frame_t* self
);

extern cef_string_userfree_t cefingo_v8stack_frame_get_script_name(
	struct _cef_v8stack_frame_t* self
);

extern cef_string_userfree_t cefingo_v8stack_frame_get_script_name_or_source_url(
	struct _cef_v8stack_frame_t* self
);

extern cef_string_userfree_t cefingo_v8stack_frame_get_function_name(
	struct _cef_v8stack_frame_t* self
);

extern int cefingo_v8stack_frame_get_line_number(
	struct _cef_v8stack_frame_t* self
);

extern int cefingo_v8stack_frame_get_column(
	struct _cef_v8stack_frame_t* self
);

extern int cefingo_v8stack_frame_is_eval(
	struct _cef_v8stack_frame_t* self
);

extern int cefingo_v8stack_frame_is_constructor(
	struct _cef_v8stack_frame_t* self
);

extern int cefingo_value_is_valid(
	struct _cef_value_t* self
);

extern int cefingo_value_is_owned(
	struct _cef_value_t* self
);

extern int cefingo_value_is_read_only(
	struct _cef_value_t* self
);

extern int cefingo_value_is_same(
	struct _cef_value_t* self,
	struct _cef_value_t* that
);

extern int cefingo_value_is_equal(
	struct _cef_value_t* self,
	struct _cef_value_t* that
);

extern struct _cef_value_t* cefingo_value_copy(
	struct _cef_value_t* self
);

extern cef_value_type_t cefingo_value_get_type(
	struct _cef_value_t* self
);

extern int cefingo_value_get_bool(
	struct _cef_value_t* self
);

extern int cefingo_value_get_int(
	struct _cef_value_t* self
);

extern double cefingo_value_get_double(
	struct _cef_value_t* self
);

extern cef_string_userfree_t cefingo_value_get_string(
	struct _cef_value_t* self
);

extern struct _cef_binary_value_t* cefingo_value_get_binary(
	struct _cef_value_t* self
);

extern struct _cef_dictionary_value_t* cefingo_value_get_dictionary(
	struct _cef_value_t* self
);

extern struct _cef_list_value_t* cefingo_value_get_list(
	struct _cef_value_t* self
);

extern int cefingo_value_set_null(
	struct _cef_value_t* self
);

extern int cefingo_value_set_bool(
	struct _cef_value_t* self,
	int value
);

extern int cefingo_value_set_int(
	struct _cef_value_t* self,
	int value
);

extern int cefingo_value_set_double(
	struct _cef_value_t* self,
	double value
);

extern int cefingo_value_set_string(
	struct _cef_value_t* self,
	const cef_string_t* value
);

extern int cefingo_value_set_binary(
	struct _cef_value_t* self,
	struct _cef_binary_value_t* value
);

extern int cefingo_value_set_dictionary(
	struct _cef_value_t* self,
	struct _cef_dictionary_value_t* value
);

extern int cefingo_value_set_list(
	struct _cef_value_t* self,
	struct _cef_list_value_t* value
);

extern int cefingo_binary_value_is_valid(
	struct _cef_binary_value_t* self
);

extern int cefingo_binary_value_is_owned(
	struct _cef_binary_value_t* self
);

extern int cefingo_binary_value_is_same(
	struct _cef_binary_value_t* self,
	struct _cef_binary_value_t* that
);

extern int cefingo_binary_value_is_equal(
	struct _cef_binary_value_t* self,
	struct _cef_binary_value_t* that
);

extern struct _cef_binary_value_t* cefingo_binary_value_copy(
	struct _cef_binary_value_t* self
);

extern size_t cefingo_binary_value_get_size(
	struct _cef_binary_value_t* self
);

extern size_t cefingo_binary_value_get_data(
	struct _cef_binary_value_t* self,
	void* buffer,
	size_t buffer_size,
	size_t data_offset
);

extern int cefingo_dictionary_value_is_valid(
	struct _cef_dictionary_value_t* self
);

extern int cefingo_dictionary_value_is_owned(
	struct _cef_dictionary_value_t* self
);

extern int cefingo_dictionary_value_is_read_only(
	struct _cef_dictionary_value_t* self
);

extern int cefingo_dictionary_value_is_same(
	struct _cef_dictionary_value_t* self,
	struct _cef_dictionary_value_t* that
);

extern int cefingo_dictionary_value_is_equal(
	struct _cef_dictionary_value_t* self,
	struct _cef_dictionary_value_t* that
);

extern struct _cef_dictionary_value_t* cefingo_dictionary_value_copy(
	struct _cef_dictionary_value_t* self,
	int exclude_empty_children
);

extern size_t cefingo_dictionary_value_get_size(
	struct _cef_dictionary_value_t* self
);

extern int cefingo_dictionary_value_clear(
	struct _cef_dictionary_value_t* self
);

extern int cefingo_dictionary_value_has_key(
	struct _cef_dictionary_value_t* self,
	const cef_string_t* key
);

extern int cefingo_dictionary_value_get_keys(
	struct _cef_dictionary_value_t* self,
	cef_string_list_t keys
);

extern int cefingo_dictionary_value_remove(
	struct _cef_dictionary_value_t* self,
	const cef_string_t* key
);

extern cef_value_type_t cefingo_dictionary_value_get_type(
	struct _cef_dictionary_value_t* self,
	const cef_string_t* key
);

extern struct _cef_value_t* cefingo_dictionary_value_get_value(
	struct _cef_dictionary_value_t* self,
	const cef_string_t* key
);

extern int cefingo_dictionary_value_get_bool(
	struct _cef_dictionary_value_t* self,
	const cef_string_t* key
);

extern int cefingo_dictionary_value_get_int(
	struct _cef_dictionary_value_t* self,
	const cef_string_t* key
);

extern double cefingo_dictionary_value_get_double(
	struct _cef_dictionary_value_t* self,
	const cef_string_t* key
);

extern cef_string_userfree_t cefingo_dictionary_value_get_string(
	struct _cef_dictionary_value_t* self,
	const cef_string_t* key
);

extern struct _cef_binary_value_t* cefingo_dictionary_value_get_binary(
	struct _cef_dictionary_value_t* self,
	const cef_string_t* key
);

extern struct _cef_dictionary_value_t* cefingo_dictionary_value_get_dictionary(
	struct _cef_dictionary_value_t* self,
	const cef_string_t* key
);

extern struct _cef_list_value_t* cefingo_dictionary_value_get_list(
	struct _cef_dictionary_value_t* self,
	const cef_string_t* key
);

extern int cefingo_dictionary_value_set_value(
	struct _cef_dictionary_value_t* self,
	const cef_string_t* key,
	struct _cef_value_t* value
);

extern int cefingo_dictionary_value_set_null(
	struct _cef_dictionary_value_t* self,
	const cef_string_t* key
);

extern int cefingo_dictionary_value_set_bool(
	struct _cef_dictionary_value_t* self,
	const cef_string_t* key,
	int value
);

extern int cefingo_dictionary_value_set_int(
	struct _cef_dictionary_value_t* self,
	const cef_string_t* key,
	int value
);

extern int cefingo_dictionary_value_set_double(
	struct _cef_dictionary_value_t* self,
	const cef_string_t* key,
	double value
);

extern int cefingo_dictionary_value_set_string(
	struct _cef_dictionary_value_t* self,
	const cef_string_t* key,
	const cef_string_t* value
);

extern int cefingo_dictionary_value_set_binary(
	struct _cef_dictionary_value_t* self,
	const cef_string_t* key,
	struct _cef_binary_value_t* value
);

extern int cefingo_dictionary_value_set_dictionary(
	struct _cef_dictionary_value_t* self,
	const cef_string_t* key,
	struct _cef_dictionary_value_t* value
);

extern int cefingo_dictionary_value_set_list(
	struct _cef_dictionary_value_t* self,
	const cef_string_t* key,
	struct _cef_list_value_t* value
);

extern int cefingo_list_value_is_valid(
	struct _cef_list_value_t* self
);

extern int cefingo_list_value_is_owned(
	struct _cef_list_value_t* self
);

extern int cefingo_list_value_is_read_only(
	struct _cef_list_value_t* self
);

extern int cefingo_list_value_is_same(
	struct _cef_list_value_t* self,
	struct _cef_list_value_t* that
);

extern int cefingo_list_value_is_equal(
	struct _cef_list_value_t* self,
	struct _cef_list_value_t* that
);

extern struct _cef_list_value_t* cefingo_list_value_copy(
	struct _cef_list_value_t* self
);

extern int cefingo_list_value_set_size(
	struct _cef_list_value_t* self,
	size_t size
);

extern size_t cefingo_list_value_get_size(
	struct _cef_list_value_t* self
);

extern int cefingo_list_value_clear(
	struct _cef_list_value_t* self
);

extern int cefingo_list_value_remove(
	struct _cef_list_value_t* self,
	size_t index
);

extern cef_value_type_t cefingo_list_value_get_type(
	struct _cef_list_value_t* self,
	size_t index
);

extern struct _cef_value_t* cefingo_list_value_get_value(
	struct _cef_list_value_t* self,
	size_t index
);

extern int cefingo_list_value_get_bool(
	struct _cef_list_value_t* self,
	size_t index
);

extern int cefingo_list_value_get_int(
	struct _cef_list_value_t* self,
	size_t index
);

extern double cefingo_list_value_get_double(
	struct _cef_list_value_t* self,
	size_t index
);

extern cef_string_userfree_t cefingo_list_value_get_string(
	struct _cef_list_value_t* self,
	size_t index
);

extern struct _cef_binary_value_t* cefingo_list_value_get_binary(
	struct _cef_list_value_t* self,
	size_t index
);

extern struct _cef_dictionary_value_t* cefingo_list_value_get_dictionary(
	struct _cef_list_value_t* self,
	size_t index
);

extern struct _cef_list_value_t* cefingo_list_value_get_list(
	struct _cef_list_value_t* self,
	size_t index
);

extern int cefingo_list_value_set_value(
	struct _cef_list_value_t* self,
	size_t index,
	struct _cef_value_t* value
);

extern int cefingo_list_value_set_null(
	struct _cef_list_value_t* self,
	size_t index
);

extern int cefingo_list_value_set_bool(
	struct _cef_list_value_t* self,
	size_t index,
	int value
);

extern int cefingo_list_value_set_int(
	struct _cef_list_value_t* self,
	size_t index,
	int value
);

extern int cefingo_list_value_set_double(
	struct _cef_list_value_t* self,
	size_t index,
	double value
);

extern int cefingo_list_value_set_string(
	struct _cef_list_value_t* self,
	size_t index,
	const cef_string_t* value
);

extern int cefingo_list_value_set_binary(
	struct _cef_list_value_t* self,
	size_t index,
	struct _cef_binary_value_t* value
);

extern int cefingo_list_value_set_dictionary(
	struct _cef_list_value_t* self,
	size_t index,
	struct _cef_dictionary_value_t* value
);

extern int cefingo_list_value_set_list(
	struct _cef_list_value_t* self,
	size_t index,
	struct _cef_list_value_t* value
);

extern struct _cef_browser_view_t* cefingo_view_as_browser_view(
	struct _cef_view_t* self
);

extern struct _cef_button_t* cefingo_view_as_button(
	struct _cef_view_t* self
);

extern struct _cef_panel_t* cefingo_view_as_panel(
	struct _cef_view_t* self
);

extern struct _cef_scroll_view_t* cefingo_view_as_scroll_view(
	struct _cef_view_t* self
);

extern struct _cef_textfield_t* cefingo_view_as_textfield(
	struct _cef_view_t* self
);

extern cef_string_userfree_t cefingo_view_get_type_string(
	struct _cef_view_t* self
);

extern cef_string_userfree_t cefingo_view_to_string(
	struct _cef_view_t* self,
	int include_children
);

extern int cefingo_view_is_valid(
	struct _cef_view_t* self
);

extern int cefingo_view_is_attached(
	struct _cef_view_t* self
);

extern int cefingo_view_is_same(
	struct _cef_view_t* self,
	struct _cef_view_t* that
);

extern struct _cef_view_delegate_t* cefingo_view_get_delegate(
	struct _cef_view_t* self
);

extern struct _cef_window_t* cefingo_view_get_window(
	struct _cef_view_t* self
);

extern int cefingo_view_get_id(
	struct _cef_view_t* self
);

extern void cefingo_view_set_id(
	struct _cef_view_t* self,
	int id
);

extern int cefingo_view_get_group_id(
	struct _cef_view_t* self
);

extern void cefingo_view_set_group_id(
	struct _cef_view_t* self,
	int group_id
);

extern struct _cef_view_t* cefingo_view_get_parent_view(
	struct _cef_view_t* self
);

extern struct _cef_view_t* cefingo_view_get_view_for_id(
	struct _cef_view_t* self,
	int id
);

extern void cefingo_view_set_bounds(
	struct _cef_view_t* self,
	const cef_rect_t* bounds
);

extern cef_rect_t cefingo_view_get_bounds(
	struct _cef_view_t* self
);

extern cef_rect_t cefingo_view_get_bounds_in_screen(
	struct _cef_view_t* self
);

extern void cefingo_view_set_size(
	struct _cef_view_t* self,
	const cef_size_t* size
);

extern cef_size_t cefingo_view_get_size(
	struct _cef_view_t* self
);

extern void cefingo_view_set_position(
	struct _cef_view_t* self,
	const cef_point_t* position
);

extern cef_point_t cefingo_view_get_position(
	struct _cef_view_t* self
);

extern void cefingo_view_set_insets(
	struct _cef_view_t* self,
	const cef_insets_t* insets
);

extern cef_insets_t cefingo_view_get_insets(
	struct _cef_view_t* self
);

extern cef_size_t cefingo_view_get_preferred_size(
	struct _cef_view_t* self
);

extern void cefingo_view_size_to_preferred_size(
	struct _cef_view_t* self
);

extern cef_size_t cefingo_view_get_minimum_size(
	struct _cef_view_t* self
);

extern cef_size_t cefingo_view_get_maximum_size(
	struct _cef_view_t* self
);

extern int cefingo_view_get_height_for_width(
	struct _cef_view_t* self,
	int width
);

extern void cefingo_view_invalidate_layout(
	struct _cef_view_t* self
);

extern void cefingo_view_set_visible(
	struct _cef_view_t* self,
	int visible
);

extern int cefingo_view_is_visible(
	struct _cef_view_t* self
);

extern int cefingo_view_is_drawn(
	struct _cef_view_t* self
);

extern void cefingo_view_set_enabled(
	struct _cef_view_t* self,
	int enabled
);

extern int cefingo_view_is_enabled(
	struct _cef_view_t* self
);

extern void cefingo_view_set_focusable(
	struct _cef_view_t* self,
	int focusable
);

extern int cefingo_view_is_focusable(
	struct _cef_view_t* self
);

extern int cefingo_view_is_accessibility_focusable(
	struct _cef_view_t* self
);

extern void cefingo_view_request_focus(
	struct _cef_view_t* self
);

extern void cefingo_view_set_background_color(
	struct _cef_view_t* self,
	cef_color_t color
);

extern cef_color_t cefingo_view_get_background_color(
	struct _cef_view_t* self
);

extern int cefingo_view_convert_point_to_screen(
	struct _cef_view_t* self,
	cef_point_t* point
);

extern int cefingo_view_convert_point_from_screen(
	struct _cef_view_t* self,
	cef_point_t* point
);

extern int cefingo_view_convert_point_to_window(
	struct _cef_view_t* self,
	cef_point_t* point
);

extern int cefingo_view_convert_point_from_window(
	struct _cef_view_t* self,
	cef_point_t* point
);

extern int cefingo_view_convert_point_to_view(
	struct _cef_view_t* self,
	struct _cef_view_t* view,
	cef_point_t* point
);

extern int cefingo_view_convert_point_from_view(
	struct _cef_view_t* self,
	struct _cef_view_t* view,
	cef_point_t* point
);

CEFINGO_REF_COUNTER_WRAPPER(cef_view_delegate_t, cefingo_view_delegate_wrapper_t);
extern cef_view_delegate_t *cefingo_construct_view_delegate(cefingo_view_delegate_wrapper_t* view_delegate);

extern void cefingo_window_show(
	struct _cef_window_t* self
);

extern void cefingo_window_hide(
	struct _cef_window_t* self
);

extern void cefingo_window_center_window(
	struct _cef_window_t* self,
	const cef_size_t* size
);

extern void cefingo_window_close(
	struct _cef_window_t* self
);

extern int cefingo_window_is_closed(
	struct _cef_window_t* self
);

extern void cefingo_window_activate(
	struct _cef_window_t* self
);

extern void cefingo_window_deactivate(
	struct _cef_window_t* self
);

extern int cefingo_window_is_active(
	struct _cef_window_t* self
);

extern void cefingo_window_bring_to_top(
	struct _cef_window_t* self
);

extern void cefingo_window_set_always_on_top(
	struct _cef_window_t* self,
	int on_top
);

extern int cefingo_window_is_always_on_top(
	struct _cef_window_t* self
);

extern void cefingo_window_maximize(
	struct _cef_window_t* self
);

extern void cefingo_window_minimize(
	struct _cef_window_t* self
);

extern void cefingo_window_restore(
	struct _cef_window_t* self
);

extern void cefingo_window_set_fullscreen(
	struct _cef_window_t* self,
	int fullscreen
);

extern int cefingo_window_is_maximized(
	struct _cef_window_t* self
);

extern int cefingo_window_is_minimized(
	struct _cef_window_t* self
);

extern int cefingo_window_is_fullscreen(
	struct _cef_window_t* self
);

extern void cefingo_window_set_title(
	struct _cef_window_t* self,
	const cef_string_t* title
);

extern cef_string_userfree_t cefingo_window_get_title(
	struct _cef_window_t* self
);

extern void cefingo_window_set_window_icon(
	struct _cef_window_t* self,
	struct _cef_image_t* image
);

extern struct _cef_image_t* cefingo_window_get_window_icon(
	struct _cef_window_t* self
);

extern void cefingo_window_set_window_app_icon(
	struct _cef_window_t* self,
	struct _cef_image_t* image
);

extern struct _cef_image_t* cefingo_window_get_window_app_icon(
	struct _cef_window_t* self
);

extern struct _cef_overlay_controller_t* cefingo_window_add_overlay_view(
	struct _cef_window_t* self,
	struct _cef_view_t* view,
	cef_docking_mode_t docking_mode
);

extern void cefingo_window_show_menu(
	struct _cef_window_t* self,
	struct _cef_menu_model_t* menu_model,
	const cef_point_t* screen_point,
	cef_menu_anchor_position_t anchor_position
);

extern void cefingo_window_cancel_menu(
	struct _cef_window_t* self
);

extern struct _cef_display_t* cefingo_window_get_display(
	struct _cef_window_t* self
);

extern cef_rect_t cefingo_window_get_client_area_bounds_in_screen(
	struct _cef_window_t* self
);

extern void cefingo_window_set_draggable_regions(
	struct _cef_window_t* self,
	size_t regionsCount,
	const cef_draggable_region_t* regions
);

extern cef_window_handle_t cefingo_window_get_window_handle(
	struct _cef_window_t* self
);

extern void cefingo_window_send_key_press(
	struct _cef_window_t* self,
	int key_code,
	uint32 event_flags
);

extern void cefingo_window_send_mouse_move(
	struct _cef_window_t* self,
	int screen_x,
	int screen_y
);

extern void cefingo_window_send_mouse_events(
	struct _cef_window_t* self,
	cef_mouse_button_type_t button,
	int mouse_down,
	int mouse_up
);

extern void cefingo_window_set_accelerator(
	struct _cef_window_t* self,
	int command_id,
	int key_code,
	int shift_pressed,
	int ctrl_pressed,
	int alt_pressed
);

extern void cefingo_window_remove_accelerator(
	struct _cef_window_t* self,
	int command_id
);

extern void cefingo_window_remove_all_accelerators(
	struct _cef_window_t* self
);

CEFINGO_REF_COUNTER_WRAPPER(cef_window_delegate_t, cefingo_window_delegate_wrapper_t);
extern cef_window_delegate_t *cefingo_construct_window_delegate(cefingo_window_delegate_wrapper_t* window_delegate);

extern cef_string_userfree_t cefingo_x509cert_principal_get_display_name(
	struct _cef_x509cert_principal_t* self
);

extern cef_string_userfree_t cefingo_x509cert_principal_get_common_name(
	struct _cef_x509cert_principal_t* self
);

extern cef_string_userfree_t cefingo_x509cert_principal_get_locality_name(
	struct _cef_x509cert_principal_t* self
);

extern cef_string_userfree_t cefingo_x509cert_principal_get_state_or_province_name(
	struct _cef_x509cert_principal_t* self
);

extern cef_string_userfree_t cefingo_x509cert_principal_get_country_name(
	struct _cef_x509cert_principal_t* self
);

extern void cefingo_x509cert_principal_get_street_addresses(
	struct _cef_x509cert_principal_t* self,
	cef_string_list_t addresses
);

extern void cefingo_x509cert_principal_get_organization_names(
	struct _cef_x509cert_principal_t* self,
	cef_string_list_t names
);

extern void cefingo_x509cert_principal_get_organization_unit_names(
	struct _cef_x509cert_principal_t* self,
	cef_string_list_t names
);

extern void cefingo_x509cert_principal_get_domain_components(
	struct _cef_x509cert_principal_t* self,
	cef_string_list_t components
);

extern struct _cef_x509cert_principal_t* cefingo_x509certificate_get_subject(
	struct _cef_x509certificate_t* self
);

extern struct _cef_x509cert_principal_t* cefingo_x509certificate_get_issuer(
	struct _cef_x509certificate_t* self
);

extern struct _cef_binary_value_t* cefingo_x509certificate_get_serial_number(
	struct _cef_x509certificate_t* self
);

extern cef_basetime_t cefingo_x509certificate_get_valid_start(
	struct _cef_x509certificate_t* self
);

extern cef_basetime_t cefingo_x509certificate_get_valid_expiry(
	struct _cef_x509certificate_t* self
);

extern struct _cef_binary_value_t* cefingo_x509certificate_get_derencoded(
	struct _cef_x509certificate_t* self
);

extern struct _cef_binary_value_t* cefingo_x509certificate_get_pemencoded(
	struct _cef_x509certificate_t* self
);

extern size_t cefingo_x509certificate_get_issuer_chain_size(
	struct _cef_x509certificate_t* self
);

extern void cefingo_x509certificate_get_derencoded_issuer_chain(
	struct _cef_x509certificate_t* self,
	size_t* chainCount,
	struct _cef_binary_value_t** chain
);

extern void cefingo_x509certificate_get_pemencoded_issuer_chain(
	struct _cef_x509certificate_t* self,
	size_t* chainCount,
	struct _cef_binary_value_t** chain
);
#endif //CEFINGO_GEN_H_